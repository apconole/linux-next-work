# We have to override the new %%install behavior because, well... the kernel is special.
%global __spec_install_pre %{___build_pre}

Summary: The Linux kernel

# % define buildid .local

# For a stable, released kernel, released_kernel should be 1. For rawhide
# and/or a kernel built from an rc or git snapshot, released_kernel should
# be 0.
%global released_kernel %%RELEASED_KERNEL%%

%define rpmversion %%RPMVERSION%%
%define pkgrelease %%PKGRELEASE%%

%define pkg_release %{pkgrelease}%{?buildid}

# The kernel tarball/base version
%define rheltarball %{rpmversion}-%{pkgrelease}

# What parts do we want to build?  We must build at least one kernel.
# These are the kernels that are built IF the architecture allows it.
# All should default to 1 (enabled) and be flipped to 0 (disabled)
# by later arch-specific checks.

# The following build options are enabled by default.
# Use either --without <opt> in your rpmbuild command or force values
# to 0 in here to disable them.
#
# kernel
%define with_default   %{?_without_default:   0} %{?!_without_default:   1}
# kernel-debug
%define with_debug     %{?_without_debug:     0} %{?!_without_debug:     1}
# kernel-doc
%define with_doc       %{?_without_doc:       0} %{?!_without_doc:       1}
# kernel-headers
%define with_headers   %{?_without_headers:   0} %{?!_without_headers:   1}
# perf
%define with_perf      %{?_without_perf:      0} %{?!_without_perf:      1}
# tools
%define with_tools     %{?_without_tools:     0} %{?!_without_tools:     1}
# kernel-debuginfo
%define with_debuginfo %{?_without_debuginfo: 0} %{?!_without_debuginfo: 1}
# kernel-kdump (only for s390x)
%define with_kdump     %{?_without_kdump:     0} %{?!_without_kdump:     0}
# kernel-bootwrapper (for creating zImages from kernel + initrd)
%define with_bootwrapper %{?_without_bootwrapper: 0} %{?!_without_bootwrapper: 0}
# kernel-abi-whitelists
%define with_kernel_abi_whitelists %{?_with_kernel_abi_whitelists: 0} %{?!_with_kernel_abi_whitelists: 1}

# Build the kernel-doc package, but don't fail the build if it botches.
# Here "true" means "continue" and "false" means "fail the build".
%if 0%{?released_kernel}
%define doc_build_fail false
%else
%define doc_build_fail true
%endif

%define rawhide_skip_docs 0
%if 0%{?rawhide_skip_docs}
%define with_doc 0
%define doc_build_fail true
%endif

# Additional options for user-friendly one-off kernel building:
#
# Only build the base kernel (--with baseonly):
%define with_baseonly  %{?_with_baseonly:     1} %{?!_with_baseonly:     0}
# Only build the debug kernel (--with dbgonly):
%define with_dbgonly   %{?_with_dbgonly:      1} %{?!_with_dbgonly:      0}

# Control whether we perform a compat. check against published ABI.
%define with_kabichk   %{?_without_kabichk:   0} %{?!_without_kabichk:   1}

# should we do C=1 builds with sparse
%define with_sparse    %{?_with_sparse:       1} %{?!_with_sparse:       0}

# Cross compile requested?
%define with_cross    %{?_with_cross:         1} %{?!_with_cross:        0}

# Set debugbuildsenabled to 1 for production (build separate debug kernels)
#  and 0 for rawhide (all kernels are debug kernels).
# See also 'make debug' and 'make release'.
%define debugbuildsenabled 1

%define make_target bzImage

%define KVERREL %{version}-%{release}.%{_target_cpu}
%define hdrarch %_target_cpu
%define asmarch %_target_cpu

%if !%{debugbuildsenabled}
%define with_debug 0
%endif

%if !%{with_debuginfo}
%define _enable_debug_packages 0
%endif
%define debuginfodir /usr/lib/debug

# if requested, only build base kernel
%if %{with_baseonly}
%define with_debug 0
%define with_kdump 0
%endif

# if requested, only build debug kernel
%if %{with_dbgonly}
%define with_default 0
%define with_kdump 0
%define with_tools 0
%define with_perf 0
%endif

# These arches install vdso/ directories.
%define vdso_arches %{all_x86} x86_64 ppc ppc64 s390 s390x

# Overrides for generic default options

# only build kernel-debug on x86_64, s390x, ppc64
%ifnarch x86_64 s390x ppc64
%define with_debug 0
%endif

# only package docs noarch
%ifnarch noarch
%define with_doc 0
%define with_kernel_abi_whitelists 0
%endif

# don't build noarch kernels or headers (duh)
%ifarch noarch
%define with_default 0
%define with_headers 0
%define with_tools 0
%define with_perf 0
%define all_arch_configs kernel-%{version}-*.config
%endif

# sparse blows up on ppc64
%ifarch ppc64 ppc
%define with_sparse 0
%endif

# Per-arch tweaks

%ifarch i686
%define asmarch x86
%define hdrarch i386
%endif

%ifarch x86_64
%define asmarch x86
%define all_arch_configs kernel-%{version}-x86_64*.config
%define image_install_path boot
%define kernel_image arch/x86/boot/bzImage
%endif

%ifarch ppc
%define asmarch powerpc
%define hdrarch powerpc
%endif

%ifarch ppc64
%define asmarch powerpc
%define hdrarch powerpc
%define all_arch_configs kernel-%{version}-ppc64*.config
%define image_install_path boot
%define make_target vmlinux
%define kernel_image vmlinux
%define kernel_image_elf 1
%define with_bootwrapper 1
%endif

%ifarch s390x
%define asmarch s390
%define hdrarch s390
%define all_arch_configs kernel-%{version}-s390x*.config
%define image_install_path boot
%define make_target image
%define kernel_image arch/s390/boot/image
%define with_tools 0
%define with_kdump 1
%endif

# Should make listnewconfig fail if there's config options
# printed out?
%define listnewconfig_fail 1

# To temporarily exclude an architecture from being built, add it to
# %%nobuildarches. Do _NOT_ use the ExclusiveArch: line, because if we
# don't build kernel-headers then the new build system will no longer let
# us use the previous build of that package -- it'll just be completely AWOL.
# Which is a BadThing(tm).

# We only build kernel-headers on the following...
%define nobuildarches i686 s390 ppc

%ifarch %nobuildarches
%define with_default 0
%define with_debuginfo 0
%define with_kdump 0
%define with_tools 0
%define with_perf 0
%define _enable_debug_packages 0
%endif

# Architectures we build tools/cpupower on
%define cpupowerarchs x86_64 ppc64

#
# Three sets of minimum package version requirements in the form of Conflicts:
# to versions below the minimum
#

#
# First the general kernel 2.6 required versions as per
# Documentation/Changes
#
%define kernel_dot_org_conflicts  ppp < 2.4.3-3, isdn4k-utils < 3.2-32, nfs-utils < 1.0.7-12, e2fsprogs < 1.37-4, util-linux < 2.12, jfsutils < 1.1.7-2, reiserfs-utils < 3.6.19-2, xfsprogs < 2.6.13-4, procps < 3.2.5-6.3, oprofile < 0.9.1-2, device-mapper-libs < 1.02.63-2, mdadm < 3.2.1-5

#
# Then a series of requirements that are distribution specific, either
# because we add patches for something, or the older versions have
# problems with the newer kernel or lack certain things that make
# integration in the distro harder than needed.
#
%define package_conflicts initscripts < 7.23, udev < 063-6, iptables < 1.3.2-1, ipw2200-firmware < 2.4, iwl4965-firmware < 228.57.2, selinux-policy-targeted < 1.25.3-14, squashfs-tools < 4.0, wireless-tools < 29-3

# We moved the drm include files into kernel-headers, make sure there's
# a recent enough libdrm-devel on the system that doesn't have those.
%define kernel_headers_conflicts libdrm-devel < 2.4.0-0.15

#
# Packages that need to be installed before the kernel is, because the %%post
# scripts use them.
#
%define kernel_prereq  fileutils, module-init-tools >= 3.16-2, initscripts >= 8.11.1-1, grubby >= 8.3-1
%define initrd_prereq  dracut >= 001-7

#
# This macro does requires, provides, conflicts, obsoletes for a kernel package.
#	%%kernel_reqprovconf <subpackage>
# It uses any kernel_<subpackage>_conflicts and kernel_<subpackage>_obsoletes
# macros defined above.
#
%define kernel_reqprovconf \
Provides: kernel = %{rpmversion}-%{pkg_release}\
Provides: kernel-%{_target_cpu} = %{rpmversion}-%{pkg_release}%{?1:.%{1}}\
Provides: kernel-drm = 4.3.0\
Provides: kernel-drm-nouveau = 16\
Provides: kernel-modeset = 1\
Provides: kernel-uname-r = %{KVERREL}%{?1:.%{1}}\
Requires(pre): %{kernel_prereq}\
Requires(pre): %{initrd_prereq}\
Requires(pre): linux-firmware >= 20100806-2\
Requires(post): /sbin/new-kernel-pkg\
Requires(preun): /sbin/new-kernel-pkg\
Conflicts: %{kernel_dot_org_conflicts}\
Conflicts: %{package_conflicts}\
%{expand:%%{?kernel%{?1:_%{1}}_conflicts:Conflicts: %%{kernel%{?1:_%{1}}_conflicts}}}\
%{expand:%%{?kernel%{?1:_%{1}}_obsoletes:Obsoletes: %%{kernel%{?1:_%{1}}_obsoletes}}}\
%{expand:%%{?kernel%{?1:_%{1}}_provides:Provides: %%{kernel%{?1:_%{1}}_provides}}}\
# We can't let RPM do the dependencies automatic because it'll then pick up\
# a correct but undesirable perl dependency from the module headers which\
# isn't required for the kernel proper to function\
AutoReq: no\
AutoProv: yes\
%{nil}

Name: kernel%{?variant}
Group: System Environment/Kernel
License: GPLv2
URL: http://www.kernel.org/
Version: %{rpmversion}
Release: %{pkg_release}
# DO NOT CHANGE THE 'ExclusiveArch' LINE TO TEMPORARILY EXCLUDE AN ARCHITECTURE BUILD.
# SET %%nobuildarches (ABOVE) INSTEAD
ExclusiveArch: noarch i686 x86_64 ppc ppc64 s390 s390x
ExclusiveOS: Linux

%kernel_reqprovconf

#
# List the packages used during the kernel build
#
BuildRequires: module-init-tools, patch >= 2.5.4, bash >= 2.03, sh-utils, tar
BuildRequires: xz, findutils, gzip, m4, perl, make >= 3.78, diffutils, gawk
BuildRequires: gcc >= 3.4.2, binutils >= 2.12, redhat-rpm-config
BuildRequires: hostname, net-tools, bc
BuildRequires: xmlto, asciidoc
BuildRequires: openssl
BuildRequires: hmaccalc
%if %{with_sparse}
BuildRequires: sparse >= 0.4.1
%endif
%if %{with_perf}
BuildRequires: elfutils-devel zlib-devel binutils-devel newt-devel python-devel perl(ExtUtils::Embed) bison
BuildRequires: audit-libs-devel
%endif
%if %{with_tools}
BuildRequires: pciutils-devel gettext
%endif
%if %{with_debuginfo}
# Fancy new debuginfo generation introduced in Fedora 8/RHEL 6.
# The -r flag to find-debuginfo.sh invokes eu-strip --reloc-debug-sections
# which reduces the number of relocations in kernel module .ko.debug files and
# was introduced with rpm 4.9 and elfutils 0.153.
BuildRequires: rpm-build >= 4.9.0-1, elfutils >= elfutils-0.153-1
%define debuginfo_args --strict-build-id -r
%endif
%ifarch s390x
# required for zfcpdump
BuildRequires: glibc-static
%endif

#cross compile make
%if %{with_cross}

%if "%{_target_cpu}" == "s390x"
%define cross_opts CROSS_COMPILE=s390x-linux-gnu-
%endif
%if "%{_target_cpu}" == "ppc64"
%define cross_opts CROSS_COMPILE=powerpc64-linux-gnu-
%endif

%endif

Source0: linux-%{rpmversion}-%{pkgrelease}.tar.xz

Source1: Makefile.common

Source10: sign-modules
%define modsign_cmd %{SOURCE10}
Source11: x509.genkey
Source12: extra_certificates

Source14: find-provides

%if %{with_kabichk}
Source17: kabitool
Source18: check-kabi

Source20: Module.kabi_x86_64
Source21: Module.kabi_ppc64
Source22: Module.kabi_s390x

Source23: kabi_whitelist_ppc64
Source24: kabi_whitelist_s390x
Source25: kabi_whitelist_x86_64
%endif

Source50: kernel-%{version}-x86_64.config
Source51: kernel-%{version}-x86_64-debug.config

Source60: kernel-%{version}-ppc64.config
Source61: kernel-%{version}-ppc64-debug.config

Source70: kernel-%{version}-s390x.config
Source71: kernel-%{version}-s390x-debug.config
Source72: kernel-%{version}-s390x-kdump.config

# Sources for kernel-tools
Source2000: cpupower.service
Source2001: cpupower.config

# empty final patch to facilitate testing of kernel patches
Patch999999: linux-kernel-test.patch

BuildRoot: %{_tmppath}/kernel-%{KVERREL}-root

%if %{with_kabichk}
# Override find_provides to use a script that provides "kernel(symbol) = hash".
# Pass path of the RPM temp dir containing kabideps to find-provides script.
%global _use_internal_dependency_generator 0
%define __find_provides %_sourcedir/find-provides %{_tmppath}
%define __find_requires /usr/lib/rpm/redhat/find-requires kernel
%endif

%description
The kernel package contains the Linux kernel (vmlinuz), the core of any
Linux operating system.  The kernel handles the basic functions
of the operating system: memory allocation, process allocation, device
input and output, etc.


%package doc
Summary: Various documentation bits found in the kernel source
Group: Documentation
%description doc
This package contains documentation files from the kernel
source. Various bits of information about the Linux kernel and the
device drivers shipped with it are documented in these files.

You'll want to install this package if you need a reference to the
options that can be passed to Linux kernel modules at load time.


%package headers
Summary: Header files for the Linux kernel for use by glibc
Group: Development/System
Obsoletes: glibc-kernheaders < 3.0-46
Provides: glibc-kernheaders = 3.0-46
%description headers
Kernel-headers includes the C header files that specify the interface
between the Linux kernel and userspace libraries and programs.  The
header files define structures and constants that are needed for
building most standard programs and are also needed for rebuilding the
glibc package.

%package bootwrapper
Summary: Boot wrapper files for generating combined kernel + initrd images
Group: Development/System
Requires: gzip binutils
%description bootwrapper
Kernel-bootwrapper contains the wrapper code which makes bootable "zImage"
files combining both kernel and initial ramdisk.

%package debuginfo-common-%{_target_cpu}
Summary: Kernel source files used by %{name}-debuginfo packages
Group: Development/Debug
%description debuginfo-common-%{_target_cpu}
This package is required by %{name}-debuginfo subpackages.
It provides the kernel source files common to all builds.

%if %{with_perf}
%package -n perf
Summary: Performance monitoring for the Linux kernel
Group: Development/System
License: GPLv2
%description -n perf
This package contains the perf tool, which enables performance monitoring
of the Linux kernel.

%package -n perf-debuginfo
Summary: Debug information for package perf
Group: Development/Debug
Requires: %{name}-debuginfo-common-%{_target_cpu} = %{version}-%{release}
AutoReqProv: no
%description -n perf-debuginfo
This package provides debug information for the perf package.

# Note that this pattern only works right to match the .build-id
# symlinks because of the trailing nonmatching alternation and
# the leading .*, because of find-debuginfo.sh's buggy handling
# of matching the pattern against the symlinks file.
%{expand:%%global debuginfo_args %{?debuginfo_args} -p '.*%%{_bindir}/perf(\.debug)?|.*%%{_libexecdir}/perf-core/.*|XXX' -o perf-debuginfo.list}

%package -n python-perf
Summary: Python bindings for apps which will manipulate perf events
Group: Development/Libraries
%description -n python-perf
The python-perf package contains a module that permits applications
written in the Python programming language to use the interface
to manipulate perf events.

%{!?python_sitearch: %global python_sitearch %(%{__python} -c "from distutils.sysconfig import get_python_lib; print get_python_lib(1)")}

%package -n python-perf-debuginfo
Summary: Debug information for package perf python bindings
Group: Development/Debug
Requires: %{name}-debuginfo-common-%{_target_cpu} = %{version}-%{release}
AutoReqProv: no
%description -n python-perf-debuginfo
This package provides debug information for the perf python bindings.

# the python_sitearch macro should already be defined from above
%{expand:%%global debuginfo_args %{?debuginfo_args} -p '.*%%{python_sitearch}/perf.so(\.debug)?|XXX' -o python-perf-debuginfo.list}


%endif # with_perf

%if %{with_tools}

%package -n kernel-tools
Summary: Assortment of tools for the Linux kernel
Group: Development/System
License: GPLv2
Provides:  cpupowerutils = 1:009-0.6.p1
Obsoletes: cpupowerutils < 1:009-0.6.p1
Provides:  cpufreq-utils = 1:009-0.6.p1
Provides:  cpufrequtils = 1:009-0.6.p1
Obsoletes: cpufreq-utils < 1:009-0.6.p1
Obsoletes: cpufrequtils < 1:009-0.6.p1
Obsoletes: cpuspeed < 1:1.5-16
Requires: kernel-tools-libs = %{version}-%{release}
%description -n kernel-tools
This package contains the tools/ directory from the kernel source
and the supporting documentation.

%package -n kernel-tools-libs
Summary: Libraries for the kernels-tools
Group: Development/System
License: GPLv2
%description -n kernel-tools-libs
This package contains the libraries built from the tools/ directory
from the kernel source.

%package -n kernel-tools-libs-devel
Summary: Assortment of tools for the Linux kernel
Group: Development/System
License: GPLv2
Requires: kernel-tools = %{version}-%{release}
Provides:  cpupowerutils-devel = 1:009-0.6.p1
Obsoletes: cpupowerutils-devel < 1:009-0.6.p1
Requires: kernel-tools-libs = %{version}-%{release}
Provides: kernel-tools-devel
%description -n kernel-tools-libs-devel
This package contains the development files for the tools/ directory from
the kernel source.

%package -n kernel-tools-debuginfo
Summary: Debug information for package kernel-tools
Group: Development/Debug
Requires: %{name}-debuginfo-common-%{_target_cpu} = %{version}-%{release}
AutoReqProv: no
%description -n kernel-tools-debuginfo
This package provides debug information for package kernel-tools.

# Note that this pattern only works right to match the .build-id
# symlinks because of the trailing nonmatching alternation and
# the leading .*, because of find-debuginfo.sh's buggy handling
# of matching the pattern against the symlinks file.
%{expand:%%global debuginfo_args %{?debuginfo_args} -p '.*%%{_bindir}/centrino-decode(\.debug)?|.*%%{_bindir}/powernow-k8-decode(\.debug)?|.*%%{_bindir}/cpupower(\.debug)?|.*%%{_libdir}/libcpupower.*|.*%%{_libdir}/libcpupower.*|.*%%{_bindir}/turbostat(\.debug)?|.*%%{_bindir}/x86_energy_perf_policy(\.debug)?|XXX' -o kernel-tools-debuginfo.list}

%endif # with_tools

%package -n kernel-abi-whitelists
Summary: The Red Hat Enterprise Linux kernel ABI symbol whitelists
Group: System Environment/Kernel
AutoReqProv: no
%description -n kernel-abi-whitelists
The kABI package contains information pertaining to the Red Hat Enterprise
Linux kernel ABI, including lists of kernel symbols that are needed by
external Linux kernel modules, and a yum plugin to aid enforcement.

#
# This macro creates a kernel-<subpackage>-debuginfo package.
#	%%kernel_debuginfo_package <subpackage>
#
%define kernel_debuginfo_package() \
%package %{?1:%{1}-}debuginfo\
Summary: Debug information for package %{name}%{?1:-%{1}}\
Group: Development/Debug\
Requires: %{name}-debuginfo-common-%{_target_cpu} = %{version}-%{release}\
Provides: %{name}%{?1:-%{1}}-debuginfo-%{_target_cpu} = %{version}-%{release}\
AutoReqProv: no\
%description -n %{name}%{?1:-%{1}}-debuginfo\
This package provides debug information for package %{name}%{?1:-%{1}}.\
This is required to use SystemTap with %{name}%{?1:-%{1}}-%{KVERREL}.\
%{expand:%%global debuginfo_args %{?debuginfo_args} -p '/.*/%%{KVERREL}%{?1:\.%{1}}/.*|/.*%%{KVERREL}%{?1:\.%{1}}(\.debug)?' -o debuginfo%{?1}.list}\
%{nil}

#
# This macro creates a kernel-<subpackage>-devel package.
#	%%kernel_devel_package <subpackage> <pretty-name>
#
%define kernel_devel_package() \
%package %{?1:%{1}-}devel\
Summary: Development package for building kernel modules to match the %{?2:%{2} }kernel\
Group: System Environment/Kernel\
Provides: kernel%{?1:-%{1}}-devel-%{_target_cpu} = %{version}-%{release}\
Provides: kernel-devel-%{_target_cpu} = %{version}-%{release}%{?1:.%{1}}\
Provides: kernel-devel = %{version}-%{release}%{?1:.%{1}}\
Provides: kernel-devel-uname-r = %{KVERREL}%{?1:.%{1}}\
AutoReqProv: no\
Requires(pre): /usr/bin/find\
Requires: perl\
%description -n kernel%{?variant}%{?1:-%{1}}-devel\
This package provides kernel headers and makefiles sufficient to build modules\
against the %{?2:%{2} }kernel package.\
%{nil}

#
# This macro creates a kernel-<subpackage> and its -devel and -debuginfo too.
#	%%define variant_summary The Linux kernel compiled for <configuration>
#	%%kernel_variant_package [-n <pretty-name>] <subpackage>
#
%define kernel_variant_package(n:) \
%package %1\
Summary: %{variant_summary}\
Group: System Environment/Kernel\
%kernel_reqprovconf\
%{expand:%%kernel_devel_package %1 %{!?-n:%1}%{?-n:%{-n*}}}\
%{expand:%%kernel_debuginfo_package %1}\
%{nil}


# First the auxiliary packages of the main kernel package.
%kernel_devel_package
%kernel_debuginfo_package


# Now, each variant package.

%define variant_summary The Linux kernel compiled with extra debugging enabled
%kernel_variant_package debug
%description debug
The kernel package contains the Linux kernel (vmlinuz), the core of any
Linux operating system.  The kernel handles the basic functions
of the operating system:  memory allocation, process allocation, device
input and output, etc.

This variant of the kernel has numerous debugging options enabled.
It should only be installed when trying to gather additional information
on kernel bugs, as some of these options impact performance noticably.

%define variant_summary A minimal Linux kernel compiled for crash dumps
%kernel_variant_package kdump
%description kdump
This package includes a kdump version of the Linux kernel. It is
required only on machines which will use the kexec-based kernel crash dump
mechanism.

%prep
# do a few sanity-checks for --with *only builds
%if %{with_baseonly}
%if !%{with_default}
echo "Cannot build --with baseonly, default kernel build is disabled"
exit 1
%endif
%endif

# more sanity checking; do it quietly
if [ "%{patches}" != "%%{patches}" ] ; then
  for patch in %{patches} ; do
    if [ ! -f $patch ] ; then
      echo "ERROR: Patch  ${patch##/*/}  listed in specfile but is missing"
      exit 1
    fi
  done
fi 2>/dev/null

patch_command='patch -p1 -F1 -s'
ApplyPatch()
{
  local patch=$1
  shift
  if [ ! -f $RPM_SOURCE_DIR/$patch ]; then
    exit 1
  fi
  if ! grep -E "^Patch[0-9]+: $patch\$" %{_specdir}/${RPM_PACKAGE_NAME%%%%%{?variant}}.spec ; then
    if [ "${patch:0:8}" != "patch-3." ] ; then
      echo "ERROR: Patch  $patch  not listed as a source patch in specfile"
      exit 1
    fi
  fi 2>/dev/null
  case "$patch" in
  *.bz2) bunzip2 < "$RPM_SOURCE_DIR/$patch" | $patch_command ${1+"$@"} ;;
  *.gz) gunzip < "$RPM_SOURCE_DIR/$patch" | $patch_command ${1+"$@"} ;;
  *) $patch_command ${1+"$@"} < "$RPM_SOURCE_DIR/$patch" ;;
  esac
}

# don't apply patch if it's empty
ApplyOptionalPatch()
{
  local patch=$1
  shift
  if [ ! -f $RPM_SOURCE_DIR/$patch ]; then
    exit 1
  fi
  local C=$(wc -l $RPM_SOURCE_DIR/$patch | awk '{print $1}')
  if [ "$C" -gt 9 ]; then
    ApplyPatch $patch ${1+"$@"}
  fi
}

if [ ! -d kernel-%{rheltarball}/vanilla-%{rheltarball}/ ]; then
	rm -f pax_global_header;
%setup -q -n kernel-%{rheltarball} -c
	mv linux-%{rheltarball} vanilla-%{rheltarball};
else
	cd kernel-%{rheltarball}/;
fi

if [ -d linux-%{KVERREL} ]; then
	# Just in case we ctrl-c'd a prep already
	rm -rf deleteme.%{_target_cpu}
	# Move away the stale away, and delete in background.
	mv linux-%{KVERREL} deleteme.%{_target_cpu}
	rm -rf deleteme.%{_target_cpu} &
fi

cp -rl vanilla-%{rheltarball} linux-%{KVERREL}
cd linux-%{KVERREL}

# Drop some necessary files from the source dir into the buildroot
cp $RPM_SOURCE_DIR/kernel-*.config .

ApplyOptionalPatch linux-kernel-test.patch

# Any further pre-build tree manipulations happen here.

chmod +x scripts/checkpatch.pl

# This Prevents scripts/setlocalversion from mucking with our version numbers.
touch .scmversion

# only deal with configs if we are going to build for the arch
%ifnarch %nobuildarches

if [ -L configs ]; then
	rm -f configs
	mkdir configs
fi

# Remove configs not for the buildarch
for cfg in kernel-%{version}-*.config; do
  if [ `echo %{all_arch_configs} | grep -c $cfg` -eq 0 ]; then
    rm -f $cfg
  fi
done

%if !%{debugbuildsenabled}
rm -f kernel-%{version}-*debug.config
%endif

# now run oldconfig over all the config files
for i in *.config
do
  mv $i .config
  Arch=`head -1 .config | cut -b 3-`
  make %{?cross_opts} ARCH=$Arch listnewconfig | grep -E '^CONFIG_' >.newoptions || true
%if %{listnewconfig_fail}
  if [ -s .newoptions ]; then
    cat .newoptions
    exit 1
  fi
%endif
  rm -f .newoptions
  make %{?cross_opts} ARCH=$Arch oldnoconfig
  echo "# $Arch" > configs/$i
  cat .config >> configs/$i
done
# end of kernel config
%endif

# get rid of unwanted files resulting from patch fuzz
find . \( -name "*.orig" -o -name "*~" \) -exec rm -f {} \; >/dev/null

# remove unnecessary SCM files
find . -name .gitignore -exec rm -f {} \; >/dev/null

cd ..

###
### build
###
%build

%if %{with_sparse}
%define sparse_mflags	C=1
%endif

%if %{with_debuginfo}
# This override tweaks the kernel makefiles so that we run debugedit on an
# object before embedding it.  When we later run find-debuginfo.sh, it will
# run debugedit again.  The edits it does change the build ID bits embedded
# in the stripped object, but repeating debugedit is a no-op.  We do it
# beforehand to get the proper final build ID bits into the embedded image.
# This affects the vDSO images in vmlinux, and the vmlinux image in bzImage.
export AFTER_LINK=\
'sh -xc "/usr/lib/rpm/debugedit -b $$RPM_BUILD_DIR -d /usr/src/debug \
    				-i $@ > $@.id"'
%endif

cp_vmlinux()
{
  eu-strip --remove-comment -o "$2" "$1"
}

BuildKernel() {
    MakeTarget=$1
    KernelImage=$2
    Flavour=$3
    InstallName=${4:-vmlinuz}

    # Pick the right config file for the kernel we're building
    Config=kernel-%{version}-%{_target_cpu}${Flavour:+-${Flavour}}.config
    DevelDir=/usr/src/kernels/%{KVERREL}${Flavour:+.${Flavour}}

    # When the bootable image is just the ELF kernel, strip it.
    # We already copy the unstripped file into the debuginfo package.
    if [ "$KernelImage" = vmlinux ]; then
      CopyKernel=cp_vmlinux
    else
      CopyKernel=cp
    fi

    KernelVer=%{version}-%{release}.%{_target_cpu}${Flavour:+.${Flavour}}
    echo BUILDING A KERNEL FOR ${Flavour} %{_target_cpu}...

    %if 0%{?stable_update}
    # make sure SUBLEVEL is incremented on a stable release.  Sigh 3.x.
    perl -p -i -e "s/^SUBLEVEL.*/SUBLEVEL = %{?stablerev}/" Makefile
    %endif

    # make sure EXTRAVERSION says what we want it to say
    perl -p -i -e "s/^EXTRAVERSION.*/EXTRAVERSION = -%{release}.%{_target_cpu}${Flavour:+.${Flavour}}/" Makefile

    # if pre-rc1 devel kernel, must fix up PATCHLEVEL for our versioning scheme
    %if !0%{?rcrev}
    %if 0%{?gitrev}
    perl -p -i -e 's/^PATCHLEVEL.*/PATCHLEVEL = %{upstream_sublevel}/' Makefile
    %endif
    %endif

    # and now to start the build process

    make %{?cross_opts} -s mrproper

    cp %{SOURCE11} .	# x509.genkey
    cp %{SOURCE12} .	# extra_certificates

    cp configs/$Config .config

    Arch=`head -1 .config | cut -b 3-`
    echo USING ARCH=$Arch

%ifarch s390x
    if [ "$Flavour" == "kdump" ]; then
        pushd arch/s390/boot
        gcc -static -o zfcpdump zfcpdump.c
        popd
    fi
%endif

    make -s %{?cross_opts} ARCH=$Arch oldnoconfig >/dev/null
    make -s %{?cross_opts} ARCH=$Arch V=1 %{?_smp_mflags} $MakeTarget %{?sparse_mflags}

    if [ "$Flavour" != "kdump" ]; then
        make -s %{?cross_opts} ARCH=$Arch V=1 %{?_smp_mflags} modules %{?sparse_mflags} || exit 1
    fi

    # Start installing the results
%if %{with_debuginfo}
    mkdir -p $RPM_BUILD_ROOT%{debuginfodir}/boot
    mkdir -p $RPM_BUILD_ROOT%{debuginfodir}/%{image_install_path}
%endif
    mkdir -p $RPM_BUILD_ROOT/%{image_install_path}
    install -m 644 .config $RPM_BUILD_ROOT/boot/config-$KernelVer
    install -m 644 System.map $RPM_BUILD_ROOT/boot/System.map-$KernelVer

    # We estimate the size of the initramfs because rpm needs to take this size
    # into consideration when performing disk space calculations. (See bz #530778)
    dd if=/dev/zero of=$RPM_BUILD_ROOT/boot/initramfs-$KernelVer.img bs=1M count=20

    if [ -f arch/$Arch/boot/zImage.stub ]; then
      cp arch/$Arch/boot/zImage.stub $RPM_BUILD_ROOT/%{image_install_path}/zImage.stub-$KernelVer || :
    fi
    $CopyKernel $KernelImage \
    		$RPM_BUILD_ROOT/%{image_install_path}/$InstallName-$KernelVer
    chmod 755 $RPM_BUILD_ROOT/%{image_install_path}/$InstallName-$KernelVer

    # hmac sign the kernel for FIPS
    echo "Creating hmac file: $RPM_BUILD_ROOT/%{image_install_path}/.vmlinuz-$KernelVer.hmac"
    ls -l $RPM_BUILD_ROOT/%{image_install_path}/$InstallName-$KernelVer
    sha512hmac $RPM_BUILD_ROOT/%{image_install_path}/$InstallName-$KernelVer | sed -e "s,$RPM_BUILD_ROOT,," > $RPM_BUILD_ROOT/%{image_install_path}/.vmlinuz-$KernelVer.hmac;

    mkdir -p $RPM_BUILD_ROOT/lib/modules/$KernelVer
    mkdir -p $RPM_BUILD_ROOT/lib/modules/$KernelVer/kernel
    if [ "$Flavour" != "kdump" ]; then
        # Override $(mod-fw) because we don't want it to install any firmware
        # we'll get it from the linux-firmware package and we don't want conflicts
        make -s %{?cross_opts} ARCH=$Arch INSTALL_MOD_PATH=$RPM_BUILD_ROOT modules_install KERNELRELEASE=$KernelVer mod-fw=
    fi
%ifarch %{vdso_arches}
    make -s %{?cross_opts} ARCH=$Arch INSTALL_MOD_PATH=$RPM_BUILD_ROOT vdso_install KERNELRELEASE=$KernelVer
    if [ ! -s ldconfig-kernel.conf ]; then
      echo > ldconfig-kernel.conf "\
# Placeholder file, no vDSO hwcap entries used in this kernel."
    fi
    %{__install} -D -m 444 ldconfig-kernel.conf \
        $RPM_BUILD_ROOT/etc/ld.so.conf.d/kernel-$KernelVer.conf
%endif

    # And save the headers/makefiles etc for building modules against
    #
    # This all looks scary, but the end result is supposed to be:
    # * all arch relevant include/ files
    # * all Makefile/Kconfig files
    # * all script/ files

    rm -f $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    rm -f $RPM_BUILD_ROOT/lib/modules/$KernelVer/source
    mkdir -p $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    (cd $RPM_BUILD_ROOT/lib/modules/$KernelVer ; ln -s build source)
    # dirs for additional modules per module-init-tools, kbuild/modules.txt
    mkdir -p $RPM_BUILD_ROOT/lib/modules/$KernelVer/extra
    mkdir -p $RPM_BUILD_ROOT/lib/modules/$KernelVer/updates
    # first copy everything
    cp --parents `find  -type f -name "Makefile*" -o -name "Kconfig*"` $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    cp Module.symvers $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    cp System.map $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    if [ -s Module.markers ]; then
      cp Module.markers $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    fi

%if %{with_kabichk}
    # create the kABI metadata for use in packaging
    echo "**** GENERATING kernel ABI metadata ****"
    gzip -c9 < Module.symvers > $RPM_BUILD_ROOT/boot/symvers-$KernelVer.gz

%if %{with_kabichk}
    chmod 0755 %_sourcedir/kabitool
    rm -f %{_tmppath}/kernel-$KernelVer-kabideps
    %_sourcedir/kabitool -s Module.symvers -o %{_tmppath}/kernel-$KernelVer-kabideps

    echo "**** kABI checking is enabled in kernel SPEC file. ****"
    chmod 0755 $RPM_SOURCE_DIR/check-kabi
    if [ -e $RPM_SOURCE_DIR/Module.kabi_%{_target_cpu}$Flavour ]; then
        cp $RPM_SOURCE_DIR/Module.kabi_%{_target_cpu}$Flavour $RPM_BUILD_ROOT/Module.kabi
        $RPM_SOURCE_DIR/check-kabi -k $RPM_BUILD_ROOT/Module.kabi -s Module.symvers || exit 1
        rm $RPM_BUILD_ROOT/Module.kabi # for now, don't keep it around.
    else
        echo "**** NOTE: Cannot find reference Module.kabi file. ****"
    fi
%endif
    # Ensure the kabideps file always exists for the RPM ProvReq scripts
    touch %{_tmppath}/kernel-$KernelVer-kabideps
%endif %{with_kabichk}

    # then drop all but the needed Makefiles/Kconfig files
    rm -rf $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/Documentation
    rm -rf $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/scripts
    rm -rf $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/include
    cp .config $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    cp -a scripts $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    if [ -d arch/$Arch/scripts ]; then
      cp -a arch/$Arch/scripts $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/arch/%{_arch} || :
    fi
    if [ -f arch/$Arch/*lds ]; then
      cp -a arch/$Arch/*lds $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/arch/%{_arch}/ || :
    fi
    rm -f $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/scripts/*.o
    rm -f $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/scripts/*/*.o
%ifarch ppc64
    cp -a --parents arch/powerpc/lib/crtsavres.[So] $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
%endif
    if [ -d arch/%{asmarch}/include ]; then
      cp -a --parents arch/%{asmarch}/include $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    fi
    cp -a include $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/include

    # Make sure the Makefile and version.h have a matching timestamp so that
    # external modules can be built
    touch -r $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/Makefile $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/include/generated/uapi/linux/version.h
    touch -r $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/.config $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/include/generated/autoconf.h
    # Copy .config to include/config/auto.conf so "make prepare" is unnecessary.
    cp $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/.config $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/include/config/auto.conf

%if %{with_debuginfo}
    if test -s vmlinux.id; then
      cp vmlinux.id $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/vmlinux.id
    else
      echo >&2 "*** ERROR *** no vmlinux build ID! ***"
      exit 1
    fi

    #
    # save the vmlinux file for kernel debugging into the kernel-debuginfo rpm
    #
    mkdir -p $RPM_BUILD_ROOT%{debuginfodir}/lib/modules/$KernelVer
    cp vmlinux $RPM_BUILD_ROOT%{debuginfodir}/lib/modules/$KernelVer
%endif

    find $RPM_BUILD_ROOT/lib/modules/$KernelVer -name "*.ko" -type f >modnames

    # mark modules executable so that strip-to-file can strip them
    xargs --no-run-if-empty chmod u+x < modnames

    # Generate a list of modules for block and networking.

    grep -F /drivers/ modnames | xargs --no-run-if-empty nm -upA |
    sed -n 's,^.*/\([^/]*\.ko\):  *U \(.*\)$,\1 \2,p' > drivers.undef

    collect_modules_list()
    {
      sed -r -n -e "s/^([^ ]+) \\.?($2)\$/\\1/p" drivers.undef |
      LC_ALL=C sort -u > $RPM_BUILD_ROOT/lib/modules/$KernelVer/modules.$1
    }

    collect_modules_list networking \
    			 'register_netdev|ieee80211_register_hw|usbnet_probe|phy_driver_register|rt2x00(pci|usb)_probe|register_netdevice'
    collect_modules_list block \
    			 'ata_scsi_ioctl|scsi_add_host|scsi_add_host_with_dma|blk_init_queue|register_mtd_blktrans|scsi_esp_register|scsi_register_device_handler|blk_queue_physical_block_size'
    collect_modules_list drm \
    			 'drm_open|drm_init'
    collect_modules_list modesetting \
    			 'drm_crtc_init'

    # detect missing or incorrect license tags
    rm -f modinfo
    while read i
    do
      echo -n "${i#$RPM_BUILD_ROOT/lib/modules/$KernelVer/} " >> modinfo
      /sbin/modinfo -l $i >> modinfo
    done < modnames

    grep -E -v \
    	  'GPL( v2)?$|Dual BSD/GPL$|Dual MPL/GPL$|GPL and additional rights$' \
	  modinfo && exit 1

    rm -f modinfo modnames

    # Save off the .tmp_versions/ directory.  We'll use it in the
    # __debug_install_post macro below to sign the right things
    # Also save the signing keys so we actually sign the modules with the
    # right key.
    cp -r .tmp_versions .tmp_versions.sign${Flavour:+.${Flavour}}
    cp signing_key.priv signing_key.priv.sign${Flavour:+.${Flavour}}
    cp signing_key.x509 signing_key.x509.sign${Flavour:+.${Flavour}}

    # remove files that will be auto generated by depmod at rpm -i time
    for i in alias alias.bin builtin.bin ccwmap dep dep.bin ieee1394map inputmap isapnpmap ofmap pcimap seriomap symbols symbols.bin usbmap
    do
      rm -f $RPM_BUILD_ROOT/lib/modules/$KernelVer/modules.$i
    done

    # Move the devel headers out of the root file system
    mkdir -p $RPM_BUILD_ROOT/usr/src/kernels
    mv $RPM_BUILD_ROOT/lib/modules/$KernelVer/build $RPM_BUILD_ROOT/$DevelDir
    ln -sf $DevelDir $RPM_BUILD_ROOT/lib/modules/$KernelVer/build

    # prune junk from kernel-devel
    find $RPM_BUILD_ROOT/usr/src/kernels -name ".*.cmd" -exec rm -f {} \;
}

###
# DO it...
###

# prepare directories
rm -rf $RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT/boot
mkdir -p $RPM_BUILD_ROOT%{_libexecdir}

cd linux-%{KVERREL}

%if %{with_default}
BuildKernel %make_target %kernel_image
%endif

%if %{with_debug}
BuildKernel %make_target %kernel_image debug
%endif

%if %{with_kdump}
BuildKernel %make_target %kernel_image kdump
%endif

%global perf_make \
  make %{?_smp_mflags} -C tools/perf -s V=1 WERROR=0 NO_LIBUNWIND=1 HAVE_CPLUS_DEMANGLE=1 NO_GTK2=1 NO_LIBNUMA=1 NO_STRLCPY=1 prefix=%{_prefix}
%if %{with_perf}
# perf
%{perf_make} all
%{perf_make} man || %{doc_build_fail}
%endif

%if %{with_tools}
%ifarch %{cpupowerarchs}
# cpupower
# make sure version-gen.sh is executable.
chmod +x tools/power/cpupower/utils/version-gen.sh
make %{?cross_opts} %{?_smp_mflags} -C tools/power/cpupower CPUFREQ_BENCH=false
%ifarch x86_64
    pushd tools/power/cpupower/debug/x86_64
    make %{?_smp_mflags} centrino-decode powernow-k8-decode
    popd
%endif
%ifarch x86_64
   pushd tools/power/x86/x86_energy_perf_policy/
   make
   popd
   pushd tools/power/x86/turbostat
   make
   popd
%endif #turbostat/x86_energy_perf_policy
%endif
%endif

%if %{with_doc}
# Make the HTML and man pages.
make htmldocs mandocs || %{doc_build_fail}

# sometimes non-world-readable files sneak into the kernel source tree
chmod -R a=rX Documentation
find Documentation -type d | xargs chmod u+w
%endif

# In the modsign case, we do 3 things.  1) We check the "flavour" and hard
# code the value in the following invocations.  This is somewhat sub-optimal
# but we're doing this inside of an RPM macro and it isn't as easy as it
# could be because of that.  2) We restore the .tmp_versions/ directory from
# the one we saved off in BuildKernel above.  This is to make sure we're
# signing the modules we actually built/installed in that flavour.  3) We
# grab the arch and invoke 'make modules_sign' and the mod-extra-sign.sh
# commands to actually sign the modules.
#
# We have to do all of those things _after_ find-debuginfo runs, otherwise
# that will strip the signature off of the modules.
#
# Finally, pick a module at random and check that it's signed and fail the build
# if it isn't.

%define __modsign_install_post \
  if [ "%{with_debug}" -ne "0" ]; then \
    Arch=`head -1 configs/kernel-%{version}-%{_target_cpu}-debug.config | cut -b 3-` \
    rm -rf .tmp_versions \
    mv .tmp_versions.sign.debug .tmp_versions \
    mv signing_key.priv.sign.debug signing_key.priv \
    mv signing_key.x509.sign.debug signing_key.x509 \
    %{modsign_cmd} $RPM_BUILD_ROOT/lib/modules/%{KVERREL}.debug || exit 1 \
  fi \
    if [ "%{with_default}" -ne "0" ]; then \
    Arch=`head -1 configs/kernel-%{version}-%{_target_cpu}.config | cut -b 3-` \
    rm -rf .tmp_versions \
    mv .tmp_versions.sign .tmp_versions \
    mv signing_key.priv.sign signing_key.priv \
    mv signing_key.x509.sign signing_key.x509 \
    %{modsign_cmd} $RPM_BUILD_ROOT/lib/modules/%{KVERREL} || exit 1 \
  fi \
%{nil}

###
### Special hacks for debuginfo subpackages.
###

# This macro is used by %%install, so we must redefine it before that.
%define debug_package %{nil}

%if %{with_debuginfo}

%define __debug_install_post \
  /usr/lib/rpm/find-debuginfo.sh %{debuginfo_args} %{_builddir}/%{?buildsubdir}\
%{nil}

%ifnarch noarch
%global __debug_package 1
%files -f debugfiles.list debuginfo-common-%{_target_cpu}
%defattr(-,root,root)
%endif

%endif

#
# Disgusting hack alert! We need to ensure we sign modules *after* all
# invocations of strip occur, which is in __debug_install_post if
# find-debuginfo.sh runs, and __os_install_post if not.
#
%define __spec_install_post \
  %{?__debug_package:%{__debug_install_post}}\
  %{__arch_install_post}\
  %{__os_install_post}\
  %{__modsign_install_post}

###
### install
###

%install

cd linux-%{KVERREL}

%if %{with_doc}
docdir=$RPM_BUILD_ROOT%{_datadir}/doc/kernel-doc-%{rpmversion}
man9dir=$RPM_BUILD_ROOT%{_datadir}/man/man9

# copy the source over
mkdir -p $docdir
tar -f - --exclude=man --exclude='.*' -c Documentation | tar xf - -C $docdir

# Install man pages for the kernel API.
mkdir -p $man9dir
find Documentation/DocBook/man -name '*.9.gz' -print0 |
xargs -0 --no-run-if-empty %{__install} -m 444 -t $man9dir $m
ls $man9dir | grep -q '' || > $man9dir/BROKEN
%endif # with_doc

# We have to do the headers install before the tools install because the
# kernel headers_install will remove any header files in /usr/include that
# it doesn't install itself.

%if %{with_headers}
# Install kernel headers
make %{?cross_opts} ARCH=%{hdrarch} INSTALL_HDR_PATH=$RPM_BUILD_ROOT/usr headers_install

# Do headers_check but don't die if it fails.
make %{?cross_opts} ARCH=%{hdrarch} INSTALL_HDR_PATH=$RPM_BUILD_ROOT/usr headers_check \
     > hdrwarnings.txt || :
if grep -q exist hdrwarnings.txt; then
   sed s:^$RPM_BUILD_ROOT/usr/include/:: hdrwarnings.txt
   # Temporarily cause a build failure if header inconsistencies.
   # exit 1
fi

find $RPM_BUILD_ROOT/usr/include \
     \( -name .install -o -name .check -o \
     	-name ..install.cmd -o -name ..check.cmd \) | xargs rm -f

%endif

%if %{with_kernel_abi_whitelists}
# kabi directory
INSTALL_KABI_PATH=$RPM_BUILD_ROOT/lib/modules/kabi-rhel70
mkdir -p $INSTALL_KABI_PATH

# install kabi whitelists
cp %{SOURCE23} %{SOURCE24} %{SOURCE25} $INSTALL_KABI_PATH
%endif  # with_kernel_abi_whitelists

%if %{with_perf}
# perf tool binary and supporting scripts/binaries
%{perf_make} DESTDIR=$RPM_BUILD_ROOT install

# perf-python extension
%{perf_make} DESTDIR=$RPM_BUILD_ROOT install-python_ext

# perf man pages (note: implicit rpm magic compresses them later)
%{perf_make} DESTDIR=$RPM_BUILD_ROOT install-man || %{doc_build_fail}
%endif

%if %{with_tools}
%ifarch %{cpupowerarchs}
make -C tools/power/cpupower DESTDIR=$RPM_BUILD_ROOT libdir=%{_libdir} mandir=%{_mandir} CPUFREQ_BENCH=false install
rm -f %{buildroot}%{_libdir}/*.{a,la}
%find_lang cpupower
mv cpupower.lang ../
%ifarch x86_64
    pushd tools/power/cpupower/debug/x86_64
    install -m755 centrino-decode %{buildroot}%{_bindir}/centrino-decode
    install -m755 powernow-k8-decode %{buildroot}%{_bindir}/powernow-k8-decode
    popd
%endif
chmod 0755 %{buildroot}%{_libdir}/libcpupower.so*
mkdir -p %{buildroot}%{_unitdir} %{buildroot}%{_sysconfdir}/sysconfig
install -m644 %{SOURCE2000} %{buildroot}%{_unitdir}/cpupower.service
install -m644 %{SOURCE2001} %{buildroot}%{_sysconfdir}/sysconfig/cpupower
%ifarch %{ix86} x86_64
   mkdir -p %{buildroot}%{_mandir}/man8
   pushd tools/power/x86/x86_energy_perf_policy
   make DESTDIR=%{buildroot} install
   popd
   pushd tools/power/x86/turbostat
   make DESTDIR=%{buildroot} install
   popd
%endif #turbostat/x86_energy_perf_policy
%endif

%endif

%if %{with_bootwrapper}
make %{?cross_opts} DESTDIR=$RPM_BUILD_ROOT bootwrapper_install WRAPPER_OBJDIR=%{_libdir}/kernel-wrapper WRAPPER_DTSDIR=%{_libdir}/kernel-wrapper/dts
%endif


###
### clean
###

%clean
rm -rf $RPM_BUILD_ROOT

###
### scripts
###

%if %{with_tools}
%post -n kernel-tools
/sbin/ldconfig

%postun -n kernel-tools
/sbin/ldconfig
%endif

#
# This macro defines a %%post script for a kernel*-devel package.
#	%%kernel_devel_post [<subpackage>]
#
%define kernel_devel_post() \
%{expand:%%post %{?1:%{1}-}devel}\
if [ -f /etc/sysconfig/kernel ]\
then\
    . /etc/sysconfig/kernel || exit $?\
fi\
if [ "$HARDLINK" != "no" -a -x /usr/sbin/hardlink ]\
then\
    (cd /usr/src/kernels/%{KVERREL}%{?1:.%{1}} &&\
     /usr/bin/find . -type f | while read f; do\
       hardlink -c /usr/src/kernels/*.fc*.*/$f $f\
     done)\
fi\
%{nil}


# This macro defines a %%posttrans script for a kernel package.
#	%%kernel_variant_posttrans [<subpackage>]
# More text can follow to go at the end of this variant's %%post.
#
%define kernel_variant_posttrans() \
%{expand:%%posttrans %{?1}}\
/sbin/new-kernel-pkg --package kernel%{?-v:-%{-v*}} --mkinitrd --dracut --depmod --update %{KVERREL}%{?-v:.%{-v*}} || exit $?}\
/sbin/new-kernel-pkg --package kernel%{?1:-%{1}} --rpmposttrans %{KVERREL}%{?1:.%{1}} || exit $?\
%{nil}

#
# This macro defines a %%post script for a kernel package and its devel package.
#	%%kernel_variant_post [-v <subpackage>] [-r <replace>]
# More text can follow to go at the end of this variant's %%post.
#
%define kernel_variant_post(v:r:) \
%{expand:%%kernel_devel_post %{?-v*}}\
%{expand:%%kernel_variant_posttrans %{?-v*}}\
%{expand:%%post %{?-v*}}\
%{-r:\
if [ `uname -i` == "x86_64" ] &&\
   [ -f /etc/sysconfig/kernel ]; then\
  /bin/sed -r -i -e 's/^DEFAULTKERNEL=%{-r*}$/DEFAULTKERNEL=kernel%{?-v:-%{-v*}}/' /etc/sysconfig/kernel || exit $?\
fi}\
%{expand:\
/sbin/new-kernel-pkg --package kernel%{?-v:-%{-v*}} --install %{KVERREL}%{?-v:.%{-v*}} || exit $?\
}\
%{nil}

#
# This macro defines a %%preun script for a kernel package.
#	%%kernel_variant_preun <subpackage>
#
%define kernel_variant_preun() \
%{expand:%%preun %{?1}}\
/sbin/new-kernel-pkg --rminitrd --rmmoddep --remove %{KVERREL}%{?1:.%{1}} || exit $?\
%{nil}

%kernel_variant_preun
%kernel_variant_post 

%kernel_variant_preun debug
%kernel_variant_post -v debug

%ifarch s390x
%postun kdump
    # Create softlink to latest remaining kdump kernel.
    # If no more kdump kernel is available, remove softlink.
    if [ "$(readlink /boot/zfcpdump)" == "/boot/vmlinuz-%{KVERREL}.kdump" ]
    then
        vmlinuz_next=$(ls /boot/vmlinuz-*.kdump 2> /dev/null | sort | tail -n1)
        if [ $vmlinuz_next ]
        then
            ln -sf $vmlinuz_next /boot/zfcpdump
        else
            rm -f /boot/zfcpdump
        fi
    fi

%post kdump
    ln -sf /boot/vmlinuz-%{KVERREL}.kdump /boot/zfcpdump
%endif # s390x

if [ -x /sbin/ldconfig ]
then
    /sbin/ldconfig -X || exit $?
fi

###
### file lists
###

%if %{with_headers}
%files headers
%defattr(-,root,root)
/usr/include/*
%endif

%if %{with_bootwrapper}
%files bootwrapper
%defattr(-,root,root)
/usr/sbin/*
%{_libdir}/kernel-wrapper
%endif

# only some architecture builds need kernel-doc
%if %{with_doc}
%files doc
%defattr(-,root,root)
%{_datadir}/doc/kernel-doc-%{rpmversion}/Documentation/*
%dir %{_datadir}/doc/kernel-doc-%{rpmversion}/Documentation
%dir %{_datadir}/doc/kernel-doc-%{rpmversion}
%{_datadir}/man/man9/*
%endif

%if %{with_kernel_abi_whitelists}
%files -n kernel-abi-whitelists
%defattr(-,root,root,-)
/lib/modules/kabi-*
%endif

%if %{with_perf}
%files -n perf
%defattr(-,root,root)
%{_bindir}/perf
%dir %{_libexecdir}/perf-core
%{_libexecdir}/perf-core/*
%{_mandir}/man[1-8]/perf*
%{_sysconfdir}/bash_completion.d/perf

%files -n python-perf
%defattr(-,root,root)
%{python_sitearch}

%if %{with_debuginfo}
%files -f perf-debuginfo.list -n perf-debuginfo
%defattr(-,root,root)

%files -f python-perf-debuginfo.list -n python-perf-debuginfo
%defattr(-,root,root)
%endif
%endif # with_perf

%if %{with_tools}
%files -n kernel-tools -f cpupower.lang
%defattr(-,root,root)
%ifarch %{cpupowerarchs}
%{_bindir}/cpupower
%ifarch x86_64
%{_bindir}/centrino-decode
%{_bindir}/powernow-k8-decode
%endif
%{_unitdir}/cpupower.service
%{_mandir}/man[1-8]/cpupower*
%config(noreplace) %{_sysconfdir}/sysconfig/cpupower
%ifarch %{ix86} x86_64
%{_bindir}/x86_energy_perf_policy
%{_mandir}/man8/x86_energy_perf_policy*
%{_bindir}/turbostat
%{_mandir}/man8/turbostat*
%endif
%endif

%if %{with_debuginfo}
%files -f kernel-tools-debuginfo.list -n kernel-tools-debuginfo
%defattr(-,root,root)
%endif

%ifarch %{cpupowerarchs}
%files -n kernel-tools-libs
%{_libdir}/libcpupower.so.0
%{_libdir}/libcpupower.so.0.0.0

%files -n kernel-tools-libs-devel
%{_libdir}/libcpupower.so
%{_includedir}/cpufreq.h
%endif

%endif # with_tools

# This is %%{image_install_path} on an arch where that includes ELF files,
# or empty otherwise.
%define elf_image_install_path %{?kernel_image_elf:%{image_install_path}}

#
# This macro defines the %%files sections for a kernel package
# and its devel and debuginfo packages.
#	%%kernel_variant_files [-k vmlinux] <condition> <subpackage>
#
%define kernel_variant_files(k:) \
%if %{1}\
%{expand:%%files %{?2}}\
%defattr(-,root,root)\
/%{image_install_path}/%{?-k:%{-k*}}%{!?-k:vmlinuz}-%{KVERREL}%{?2:.%{2}}\
/%{image_install_path}/.vmlinuz-%{KVERREL}%{?2:.%{2}}.hmac \
%attr(600,root,root) /boot/System.map-%{KVERREL}%{?2:.%{2}}\
/boot/symvers-%{KVERREL}%{?2:.%{2}}.gz\
/boot/config-%{KVERREL}%{?2:.%{2}}\
%dir /lib/modules/%{KVERREL}%{?2:.%{2}}\
/lib/modules/%{KVERREL}%{?2:.%{2}}/kernel\
/lib/modules/%{KVERREL}%{?2:.%{2}}/build\
/lib/modules/%{KVERREL}%{?2:.%{2}}/source\
/lib/modules/%{KVERREL}%{?2:.%{2}}/extra\
/lib/modules/%{KVERREL}%{?2:.%{2}}/updates\
%ifarch %{vdso_arches}\
/lib/modules/%{KVERREL}%{?2:.%{2}}/vdso\
/etc/ld.so.conf.d/kernel-%{KVERREL}%{?2:.%{2}}.conf\
%endif\
/lib/modules/%{KVERREL}%{?2:.%{2}}/modules.*\
%ghost /boot/initramfs-%{KVERREL}%{?2:.%{2}}.img\
%{expand:%%files %{?2:%{2}-}devel}\
%defattr(-,root,root)\
/usr/src/kernels/%{KVERREL}%{?2:.%{2}}\
%if %{with_debuginfo}\
%ifnarch noarch\
%{expand:%%files -f debuginfo%{?2}.list %{?2:%{2}-}debuginfo}\
%defattr(-,root,root)\
%endif\
%endif\
%endif\
%{nil}

%kernel_variant_files %{with_default}
%kernel_variant_files %{with_debug} debug
%kernel_variant_files %{with_kdump} kdump

%changelog
%%CHANGELOG%%
* Mon Aug 26 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-12.el7]
- [acpi] memhotplug: Fix a stale pointer in error path (Lenny Szubowicz) [995322]
- [powerpc] Add second POWER8 PVR entry (Steve Best) [995355]
- [acpi] power: add missing newline to debug messages (Myron Stowe) [998633]
- [tools] cpupower: Add Haswell family 0x45 specific idle monitor to show PC8, 9, 10 states (Myron Stowe) [998633]
- [tools] cpupower: Haswell also supports the C-states introduced with SandyBridge (Myron Stowe) [998633]
- [tools] cpupower: Introduce idle-set subcommand and C-state enabling/disabling (Myron Stowe) [998633]
- [tools] cpupower: Implement disabling of cstate interface (Myron Stowe) [998633]
- [tools] cpupower: Make idlestate usage unsigned (Myron Stowe) [998633]
- [acpi] fan: Initialize acpi_state variable (Myron Stowe) [998633]
- [acpi] scan: remove unused LIST_HEAD(acpi_device_list) (Myron Stowe) [998633]
- [acpi] dock: Actually define acpi_dock_init() as void (Myron Stowe) [998633]
- [acpi] pm: Fix corner case in acpi_bus_update_power() (Myron Stowe) [998633]
- [cpufreq] Fix serialization of frequency transitions (Myron Stowe) [998633]
- [cpufreq] Fix cpufreq regression after suspend/resume (Myron Stowe) [991615]
- [acpi] pm: Fix possible NULL pointer deref in acpi_pm_device_sleep_state() (Myron Stowe) [991615]
- [kernel] power: Warn about system time after resume with pm_trace (Myron Stowe) [991615]
- [cpufreq] don't leave stale policy pointer in cdbs->cur_policy (Myron Stowe) [991615]
- [cpufreq] acpi-cpufreq: Add new sysfs attribute freqdomain_cpus (Myron Stowe) [991615]
- [cpufreq] make sure frequency transitions are serialized (Myron Stowe) [991615]
- [acpi] implement acpi_os_get_timer() according the spec (Myron Stowe) [991615]
- [acpi] ec: Add HP Folio 13 to ec_dmi_table in order to skip DSDT scan (Myron Stowe) [991615]
- [acpi] Add CMOS RTC Operation Region handler support (Myron Stowe) [991615]
- [acpi] processor: Drop unused variable from processor_perflib.c (Myron Stowe) [991615]
- [cpufreq] powernow-k8: call CPUFREQ_POSTCHANGE notfier in error cases (Myron Stowe) [991615]
- [cpufreq] pcc: call CPUFREQ_POSTCHANGE notfier in error cases (Myron Stowe) [991615]
- [cpufreq] acpi-cpufreq: call CPUFREQ_POSTCHANGE notfier in error cases (Myron Stowe) [991615]
- [Documentation] power: Add pm_qos and dev_pm_qos to events-power.txt (Myron Stowe) [991615]
- [base] power/qos: Add dev_pm_qos_request tracepoints (Myron Stowe) [991615]
- [kernel] power/qos: Add pm_qos_request tracepoints (Myron Stowe) [991615]
- [kernel] power/qos: Add pm_qos_update_target/flags tracepoints (Myron Stowe) [991615]
- [acpi] processor: Remove unused macros in processor_driver.c (Myron Stowe) [991615]
- [Documentation] power: Update Documentation/power/pm_qos_interface.txt (Myron Stowe) [991615]
- [Documentation] cpu-hotplug: Rephrase the outdated description for MADT entries (Myron Stowe) [991615]
- [cpufreq] make __cpufreq_notify_transition() static (Myron Stowe) [991615]
- [cpufreq] Fix minor formatting issues (Myron Stowe) [991615]
- [cpufreq] Fix governor start/stop race condition (Myron Stowe) [991615]
- [kernel] power: Print last wakeup source on failed wakeup_count write (Myron Stowe) [991615]
- [kernel] power/qos: correct the valid range of pm_qos_class (Myron Stowe) [991615]
- [Documentation] video: update video_extension.txt for backlight control (Myron Stowe) [991615]
- [Documentation] video: move video_extension.txt to Documentation/acpi (Myron Stowe) [991615]
- [Documentation] video: add description for brightness_switch_enabled (Myron Stowe) [991615]
- [Documentation] Add ACPI namespace documentation (Myron Stowe) [991615]
- [Documentation] Add sysfs ABI documentation (Myron Stowe) [991615]
- [Documentation] MAINTAINERS: include Documentation/acpi (Myron Stowe) [991615]
- [acpi] acpica: Update version to 20130517 (Myron Stowe) [991615]
- [acpi] acpica: _CST repair, handle null package entries (Myron Stowe) [991615]
- [acpi] acpica: Add several repairs for _CST predefined name (Myron Stowe) [991615]
- [acpi] acpica: Move _PRT repair into the standard complex repair module (Myron Stowe) [991615]
- [acpi] scan: Do not bind ACPI drivers to objects with scan handlers (Myron Stowe) [991615]
- [acpi] pm: Rework and clean up acpi_dev_pm_get_state() (Myron Stowe) [991615]
- [acpi] pm: Replace ACPI_STATE_D3 with ACPI_STATE_D3_COLD in device_pm.c (Myron Stowe) [991615]
- [acpi] pm: Rename function acpi_device_power_state() and make it static (Myron Stowe) [991615]
- [acpi] pm: acpi_processor_suspend() can be static (Myron Stowe) [991615]
- [virt] xen/acpi: Register an acpi_suspend_lowlevel callback (Myron Stowe) [991615]
- [x86] acpi/sleep: Provide registration for acpi_suspend_lowlevel (Myron Stowe) [991615]
- [acpi] Remove unused flags in acpi_device_flags (Myron Stowe) [991615]
- [acpi] Remove useless initializers (Myron Stowe) [991615]
- [acpi] battery: Make sure all spaces are in correct places (Myron Stowe) [991615]
- [acpi] add _STA evaluation at do_acpi_find_child() (Myron Stowe) [991615]
- [acpi] ec: access user space with get_user()/put_user() (Myron Stowe) [991615]
- [cpufreq] Simplify userspace governor (Myron Stowe) [991615]
- [acpi] lpss: override SDIO private register space size from ACPI tables (Myron Stowe) [991615]
- [acpi] lpss: mask the UART TX completion interrupt (Myron Stowe) [991615]
- [acpi] lpss: add support for Intel BayTrail (Myron Stowe) [991615]
- [acpi] Do not use CONFIG_ACPI_HOTPLUG_MEMORY_MODULE (Myron Stowe) [991615]
- [cpufreq] x86: make X86_AMD_FREQ_SENSITIVITY select CPU_FREQ_TABLE (Myron Stowe) [991615]
- [cpufreq] powerpc: make CBE_RAS select CPU_FREQ_TABLE (Myron Stowe) [991615]
- [cpufreq] blackfin: enable driver for CONFIG_BFIN_CPU_FREQ (Myron Stowe) [991615]
- [acpi] acpica: Clear events initialized flag upon event component termination (Myron Stowe) [991615]
- [acpi] acpica: Fix possible memory leak in GPE init error path (Myron Stowe) [991615]
- [acpi] acpica: on termination, delete global lock pending lock (Myron Stowe) [991615]
- [acpi] acpica: Update interface to acpi_ut_valid_acpi_name() (Myron Stowe) [991615]
- [acpi] acpica: Do not use extended sleep registers unless HW-reduced bit is set (Myron Stowe) [991615]
- [acpi] acpica: Split table print utilities to a new a separate file (Myron Stowe) [991615]
- [acpi] acpica: Add option to disable loading of SSDTs from the RSDT/XSDT (Myron Stowe) [991615]
- [acpi] acpica: Standardize all switch() blocks (Myron Stowe) [991615]
- [acpi] acpica: Split internal error msg routines to a separate file (Myron Stowe) [991615]
- [acpi] acpica: Split buffer dump routines into separate file (Myron Stowe) [991615]
- [acpi] scan: Simplify ACPI driver probing (Myron Stowe) [991615]
- [base] power/wakeup: Adjust messaging for wake events during suspend (Myron Stowe) [991615]
- [cpuidle] Fix ARCH_NEEDS_CPU_IDLE_COUPLED dependency warning (Myron Stowe) [991615]
- [cpuidle] Comment the driver's framework code (Myron Stowe) [991615]
- [cpuidle] simplify multiple driver support (Myron Stowe) [991615]
- [cpufreq] powerpc: move cpufreq driver to drivers/cpufreq (Myron Stowe) [991615]
- [cpufreq] acpi-cpufreq: Add ACPI processor device IDs to acpi-cpufreq (Myron Stowe) [991615]
- [cpufreq] remove unnecessary cpufreq_cpu_{get,put}() calls (Myron Stowe) [991615]
- [Documentation] MAINTAINERS: Add git tree path for ARM specific updates to cpufreq (Myron Stowe) [991615]
- [cpufreq] rename index as driver_data in cpufreq_frequency_table (Myron Stowe) [991615]
- [Documentation] power: Update .runtime_idle() callback documentation (Myron Stowe) [991615]
- [kernel] power: Rework the "runtime idle" helper routine (Myron Stowe) [991615]
- [kernel] power: print physical addresses consistently with other parts of kernel (Myron Stowe) [991615]
- [cpuidle] improve governor Kconfig options (Myron Stowe) [991615]
- [Documentation] MAINTAINERS: update mailing list for devfreq(DVFS) (Myron Stowe) [991615]
- [devfreq] fix typo "CPU_EXYNOS4.12" twice (Myron Stowe) [991615]
- [devfreq] add comments and Documentation (Myron Stowe) [991615]
- [devfreq] account suspend/resume for stats (Myron Stowe) [991615]
- [mm] memory_hotplug: Move alternative function definitions to header (Myron Stowe) [991615]
- [acpi] processor: Fix potential NULL pointer dereference in acpi_processor_add() (Myron Stowe) [991615]
- [acpi] acpica: Update version to 20130418 (Myron Stowe) [991615]
- [acpi] acpica: Update for "orphan" embedded controller _REG method support (Myron Stowe) [991615]
- [acpi] acpica: Remove unused macros, no functional change (Myron Stowe) [991615]
- [acpi] acpica: Predefined name support, remove unused local variable (Myron Stowe) [991615]
- [acpi] acpica: Add argument typechecking for all predefined ACPI names (Myron Stowe) [991615]
- [acpi] acpica: Add BIOS error interface for predefined name validation support (Myron Stowe) [991615]
- [acpi] acpica: Change an exception code for the ASL UnLoad() operator (Myron Stowe) [991615]
- [acpi] memhotplug: Simplify memory removal (Myron Stowe) [991615]
- [acpi] scan: Add second pass of companion offlining to hot-remove code (Myron Stowe) [991615]
- [base] memory: Drop offline_memory_block() (Myron Stowe) [991615]
- [acpi] processor: Pass processor object handle to acpi_bind_one() (Myron Stowe) [991615]
- [acpi] Drop removal_type field from struct acpi_device (Myron Stowe) [991615]
- [base] memory: Simplify __memory_block_change_state() (Myron Stowe) [991615]
- [acpi] processor: Initialize per_cpu(processors, pr->id) properly (Myron Stowe) [991615]
- [base] cpu: Fix sysfs cpu/online of offlined CPUs (Myron Stowe) [991615]
- [cpufreq] Don't create empty /sys/devices/system/cpu/cpufreq directory (Myron Stowe) [991615]
- [cpufreq] Move get_cpu_idle_time() to cpufreq.c (Myron Stowe) [991615]
- [cpufreq] governors: Move get_governor_parent_kobj() to cpufreq.c (Myron Stowe) [991615]
- [cpufreq] Add EXPORT_SYMBOL_GPL for have_governor_per_policy (Myron Stowe) [991615]
- [pnp] restore automatic resolution of DMA conflicts (Myron Stowe) [991615]
- [net] af_unix: use freezable blocking calls in read (Myron Stowe) [991615]
- [kernel] sigtimedwait: use freezable blocking call (Myron Stowe) [991615]
- [kernel] nanosleep: use freezable blocking call (Myron Stowe) [991615]
- [kernel] futex: use freezable blocking call (Myron Stowe) [991615]
- [fs] select: use freezable blocking call (Myron Stowe) [991615]
- [fs] epoll: use freezable blocking call (Myron Stowe) [991615]
- [kernel] freezer: add new freezable helpers using freezer_do_not_count() (Myron Stowe) [991615]
- [kernel] freezer: convert freezable helpers to static inline where possible (Myron Stowe) [991615]
- [kernel] freezer: convert freezable helpers to freezer_do_not_count() (Myron Stowe) [991615]
- [kernel] freezer: skip waking up tasks with PF_FREEZER_SKIP set (Myron Stowe) [991615]
- [kernel] power: shorten freezer sleep time using exponential backoff (Myron Stowe) [991615]
- [kernel] lockdep: check that no locks held at freeze time (Myron Stowe) [991615]
- [kernel] lockdep: remove task argument from debug_check_no_locks_held (Myron Stowe) [991615]
- [fs] cifs: add unsafe versions of freezable helpers for CIFS (Myron Stowe) [991615]
- [fs] nfs: add unsafe versions of freezable helpers for NFS (Myron Stowe) [991615]
- [base] memory: Introduce offline/online callbacks for memory blocks (Myron Stowe) [991615]
- [acpi] memhotplug: Bind removable memory blocks to ACPI device nodes (Myron Stowe) [991615]
- [acpi] processor: Use common hotplug infrastructure (Myron Stowe) [991615]
- [acpi] hotplug: Use device offline/online for graceful hot-removal (Myron Stowe) [991615]
- [base] cpu: Use generic offline/online for CPU offline/online (Myron Stowe) [991615]
- [base] core: Add offline/online device operations (Myron Stowe) [991615]
- [scsi] bnx2i: Fix bug on some bnx2x devices that don't support iSCSI (Tomas Henzl) [957024]
- [x86] tracing: Add irq_enter/exit() in smp_trace_reschedule_interrupt() (Seiji Aguchi) [741673]
- [x86] trace: Add config option checking to the definitions of mce handlers (Seiji Aguchi) [741673]
- [x86] trace: Do not call local_irq_save() in load_current_idt() (Seiji Aguchi) [741673]
- [x86] trace: Move creation of irq tracepoints from apic.c to irq.c (Seiji Aguchi) [741673]
- [x86] trace: Add irq vector tracepoints (Seiji Aguchi) [741673]
- [x86] trace: Rename variables for debugging (Seiji Aguchi) [741673]
- [x86] trace: Introduce entering/exiting_irq() (Seiji Aguchi) [741673]
- [tracing] Add DEFINE_EVENT_FN() macro (Seiji Aguchi) [741673]
- [fs] pstore: Fail to unlink if a driver has not defined pstore_erase (Steve Best) [996930]
- [powerpc] pseries: Inform the hypervisor we are using EBB regs (Steve Best) [997646]
- [powerpc] perf: Export PERF_EVENT_CONFIG_EBB_SHIFT to userspace (Steve Best) [997646]
- [powerpc] perf: Set PPC_FEATURE2_EBB when we register the power8 PMU (Steve Best) [997646]
- [powerpc] Fix hypervisor facility unavaliable vector number (Steve Best) [995354]
- [powerpc] Fix context switch DSCR on POWER8 (Steve Best) [995354]
- [powerpc] Rework setting up H/FSCR bit definitions (Steve Best) [995354]
- [powerpc] Wire up the HV facility unavailable exception (Steve Best) [995354]
- [powerpc] Rename and flesh out the facility unavailable exception handler (Steve Best) [995354]
- [powerpc] Remove KVMTEST from RELON exception handlers (Steve Best) [995354]
- [powerpc] tm: Fix context switching TAR, PPR and DSCR SPRs (Steve Best) [988340]
- [powerpc] Save the TAR register earlier (Steve Best) [988340]

* Wed Aug 21 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-11.el7]
- [security] Revert: Secure Boot related kernel enforcements (Jarod Wilson) [903815]

* Tue Aug 20 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-10.el7]
- [block] blk-mq: blk-mq should free bios in pass through case (Mike Snitzer) [960150]
- [block] blk-mq: add missing percpu_counter_destroy for mq_usage_counter (Mike Snitzer) [960150]
- [fs] direct-io: only inc_dec inode->i_dio_count for file systems (Mike Snitzer) [960150]
- [lib] percpu_counter: make APIs irq safe (Mike Snitzer) [960150]
- [block] null_blk: multi queue aware block test driver (Mike Snitzer) [960150]
- [kernel] smp: Export __smp_call_function_single() (Mike Snitzer) [960150]
- [block] blk-mq: change sw <-> hw queue mappings on hotplug events (Mike Snitzer) [960150]
- [block] blk-mq: re-initialize queue data structure after CPU hotplug (Mike Snitzer) [960150]
- [block] blk-mq: add queue freeze/unfreeze support (Mike Snitzer) [960150]
- [block] blk-mq: fix timer infinite loop after first timeout event (Mike Snitzer) [960150]
- [block] blk-mq: timeout fixes (Mike Snitzer) [960150]
- [block] blk-mq: cpu hot plug_unplug fixes (Mike Snitzer) [960150]
- [block] blk-mq: flush handling (Mike Snitzer) [960150]
- [block] blk-mq: new multi-queue block IO queueing mechanism (Mike Snitzer) [960150]
- [block] make rq->cmd_flags be 64-bit (Mike Snitzer) [960150]
- [kernel] smp: don't warn about csd->flags having CSD_FLAG_LOCK cleared for !wait (Mike Snitzer) [960150]
- [mm] sched: Allow uaccess in atomic with pagefault_disable() (Michael S. Tsirkin) [988029]
- [mm] sched: Drop voluntary schedule from might_fault() (Michael S. Tsirkin) [988029]
- [x86] uaccess s/might_sleep/might_fault/ (Michael S. Tsirkin) [988029]
- [powerpc] uaccess s/might_sleep/might_fault/ (Michael S. Tsirkin) [988029]
- [misc] asm-generic: uaccess s/might_sleep/might_fault/ (Michael S. Tsirkin) [988029]
- [x86] efi: Disable secure boot if shim is in insecure mode (Lenny Szubowicz) [903815]
- [kernel] modsign: Import certificates from UEFI Secure Boot (Lenny Szubowicz) [903815]
- [kernel] keys: Add a system blacklist keyring (Lenny Szubowicz) [903815]
- [crypto] asymmetric_keys: Add an EFI signature blob parser and key loader (Lenny Szubowicz) [903815]
- [kernel] modsign: Fix including certificate twice when the signing_key.x509 already exists (Lenny Szubowicz) [903815]
- [kernel] keys: Add a 'trusted' flag and a 'trusted only' flag (Lenny Szubowicz) [903815]
- [kernel] modsign: Separate the kernel signature checking keyring from module signing (Lenny Szubowicz) [903815]
- [kernel] modsign: Load *.x509 files into kernel keyring (Lenny Szubowicz) [903815]
- [efi] Add EFI signature data types (Lenny Szubowicz) [903815]
- [kernel] modsign: Always enforce module signing in a Secure Boot environment (Lenny Szubowicz) [903815]
- [kernel] hibernate: Disable in a Secure Boot environment (Lenny Szubowicz) [903815]
- [kernel] kexec: Disable in a secure boot environment (Lenny Szubowicz) [903815]
- [x86] Lock down MSR writing in secure boot (Lenny Szubowicz) [903815]
- [acpi] Ignore acpi_rsdp kernel parameter in a secure boot environment (Lenny Szubowicz) [903815]
- [char] mem: Restrict /dev/mem and /dev/kmem in secure boot setups (Lenny Szubowicz) [903815]
- [platform] asus-wmi: Restrict debugfs interface (Lenny Szubowicz) [903815]
- [acpi] Limit access to custom_method (Lenny Szubowicz) [903815]
- [x86] Lock down IO port access in secure boot environments (Lenny Szubowicz) [903815]
- [pci] Lock down BAR access in secure boot environments (Lenny Szubowicz) [903815]
- [x86] efi: Enable secure boot lockdown automatically when enabled in firmware (Lenny Szubowicz) [903815]
- [kernel] Add a kernel parameter that will force on Secure Boot mode (Lenny Szubowicz) [903815]
- [security] selinux: define mapping for new Secure Boot capability (Lenny Szubowicz) [903815]
- [uapi] Add new secure boot capability (Lenny Szubowicz) [903815]
- [kernel] audit: fix mq_open and mq_unlink to add the MQ root as a hidden parent audit_names record (Jeff Layton) [908885 953186]
- [kernel] audit: log the audit_names record type (Jeff Layton) [908885 953186]
- [kernel] audit: add child record before the create to handle case where create fails (Jeff Layton) [908885 953186]
- [md] dm-raid: silence compiler warning on rebuilds_per_group (Jonathan E Brassow) [970782]
- [md] dm-raid: Fix raid_resume not reviving failed devices in all cases (Jonathan E Brassow) [970782]
- [md] dm-raid: Break-up untidy function (Jonathan E Brassow) [970782]
- [s390] zfcp: block queue limits with data router (Hendrik Brueckner) [976657]
- [scsi] scsi_lib: Fix race between starved list and device removal (Ewan Milne) [986037]
- [md] dm-switch: add switch target (Mike Snitzer) [983188]
- [wireless] disable WiMAX support (John Linville) [915650]
- [fs] gfs2: don't overrun reserved revokes (Benjamin Marzinski) [950622]
- [fs] gfs2: Reserve journal space for quota change in do_grow (Robert S Peterson) [979131]
- [x86] setup: Add cpu_has_hypervisor check to rh_check_supported() (Prarit Bhargava) [986048]
- [x86] sched: Optimize switch_mm() for multi-threaded workloads (Rik van Riel) [990747]
- [crypto] nx: fix concurrency issue (Steve Best) [996565]
- [powerpc] mm: Fix fallthrough bug in hpte_decode (Steve Best) [993326]
- [misc] Kconfig: enable building user namespace with xfs (Dave Chinner) [987255]
- [fs] xfs: add capability check to free eofblocks ioctl (Dave Chinner) [987255]
- [fs] xfs: create internal eofblocks structure with kuid_t types (Dave Chinner) [987255]
- [fs] xfs: convert kuid_t to/from uid_t for internal structures (Dave Chinner) [987255]
- [fs] xfs: ioctl check for capabilities in the current user namespace (Dave Chinner) [987255]
- [fs] xfs: convert kuid_t to/from uid_t in ACLs (Dave Chinner) [987255]
- [fs] xfs: create wrappers for converting kuid_t to/from uid_t (Dave Chinner) [987255]
- [md] raid5: fix interaction of 'replace' and 'recovery' (Jes Sorensen) [978055]
- [md] raid10: remove use-after-free bug (Jes Sorensen) [978055]
- [md] raid1: fix bio handling problems in process_checks() (Jes Sorensen) [978055]
- [md] Remove recent change which allows devices to skip recovery (Jes Sorensen) [978055]
- [md] raid10: fix two problems with RAID10 resync (Jes Sorensen) [978055]
- [md] raid10: fix bug which causes all RAID10 reshapes to move no data (Jes Sorensen) [978055]
- [md] raid5: allow 5-device RAID6 to be reshaped to 4-device (Jes Sorensen) [978055]
- [md] raid10: fix two bugs affecting RAID10 reshape (Jes Sorensen) [978055]
- [md] Remember the last sync operation that was performed (Jes Sorensen) [978055]
- [md] raid0: fix buglet in RAID5 -> RAID0 conversion (Jes Sorensen) [978055]
- [md] raid10: check In_sync flag in 'enough()' (Jes Sorensen) [978055]
- [md] raid10: locking changes for 'enough()' (Jes Sorensen) [978055]
- [md] replace strict_strto*() with kstrto*() (Jes Sorensen) [978055]
- [md] Wait for md_check_recovery before attempting device removal (Jes Sorensen) [978055]
- [md] dm-raid: Add ability to restore transiently failed devices on resume (Jes Sorensen) [978055]
- [net] ipv6: resend MLD report if a link-local address completes DAD (Flavio Leitner) [889455]
- [net] ipv6: introduce per-interface counter for dad-completed ipv6 addresses (Flavio Leitner) [889455]
- [net] ipv6: split duplicate address detection and router solicitation timer (Flavio Leitner) [889455]
- [net] tcp: introduce a per-route knob for quick ack (Amerigo Wang) [984504]
- [net] nlmon: use standard rtnetlink link api for add/del devices (Daniel Borkmann) [957721]
- [net] nlmon: fix comparison in nlmon_is_valid_mtu (Daniel Borkmann) [957721]
- [net] packet: nlmon: virtual netlink monitoring device for packet sockets (Daniel Borkmann) [957721]
- [net] netlink: virtual tap device management (Daniel Borkmann) [957721]
- [net] if_arp: add ARPHRD_NETLINK type (Daniel Borkmann) [957721]

* Tue Aug 13 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-9.el7]
- [kernel] sched: disable autogroups by default (Josh Poimboeuf) [989741]
- [powerpc] pseries: Add backward compatibilty to read old kernel oops-log (Steve Best) [991831]
- [powerpc] pseries: Fix buffer overflow when reading from pstore (Steve Best) [991831]
- [crypto] nx: saves chaining value from co-processor (Steve Best) [972656]
- [crypto] nx: fix limits to sg lists for SHA-2 (Steve Best) [972656]
- [crypto] nx: fix physical addresses added to sg lists (Steve Best) [972656]

* Mon Aug 12 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-8.el7]
- [net] ipv6: ip6_append_data_mtu did not care about pmtudisc and frag_size (Francesco Fusco) [994346] {CVE-2013-4163}
- [net] ipv6: call udp_push_pending_frames when uncorking a socket with AF_INET pending data (Francesco Fusco) [988355] {CVE-2013-4162}
- [kernel] sysctl: range checking in do_proc_dointvec_ms_jiffies_conv (Francesco Fusco) [972393]
- [net] neigh: prevent overflowing params in /proc/sys/net/ipv4/neigh/ (Francesco Fusco) [972393]
- [net] vhost-net: fix use-after-free in vhost_net_flush (Thomas Graf) [984723] {CVE-2013-4127}
- [powerpc] tm: Fix return of active 64bit signals (Steve Best) [731886]
- [powerpc] tm: Fix return of 32bit rt signals to active transactions (Steve Best) [731886]
- [powerpc] tm: Fix restoration of MSR on 32bit signal return (Steve Best) [731886]
- [powerpc] tm: Fix 32 bit non-rt signals (Steve Best) [731886]
- [powerpc] tm: Fix writing top half of MSR on 32 bit signals (Steve Best) [731886]
- [fs] nfs: verify open flags before allowing an atomic open (Jeff Layton) [984823]
- [s390] zfcp: module parameter dbflevel for early debugging (Hendrik Brueckner) [994597]
- [virt] virtio_net: fix the race between channels setting and refill (Jason Wang) [978153]
- [kernel] audit: restore order of tty and ses fields in log output (Richard Guy Briggs) [983157]
- [kernel] time/tick: Make oneshot broadcast robust vs. CPU offlining (Prarit Bhargava) [967464]
- [virt] virtio_net: fix race in RX VQ processing (Jason Wang) [989409]
- [virt] virtio: support unlocked queue poll (Jason Wang) [989409]
- [powerpc] mm: Use the correct SLB(LLP) encoding in tlbie instruction (Steve Best) [993448]
- [net] tuntap: do not zerocopy if iov needs more pages than MAX_SKB_FRAGS (Jason Wang) [982513]
- [net] tuntap: correctly linearize skb when zerocopy is used (Jason Wang) [982513]
- [virt] macvtap: do not zerocopy if iov needs more pages than MAX_SKB_FRAGS (Jason Wang) [990786]
- [virt] macvtap: do not assume 802.1Q when send vlan packets (Jason Wang) [990786]
- [virt] macvtap: fix the missing ret value of TUNSETQUEUE (Jason Wang) [990786]
- [virt] macvtap: correctly linearize skb when zerocopy is used (Jason Wang) [982513]
- [virt] macvtap: Perform GSO on forwarding path (Jason Wang) [895484]
- [virt] macvtap: Let TUNSETOFFLOAD actually controll offload features (Jason Wang) [895484]
- [virt] macvtap: Consistently use rcu functions (Jason Wang) [895484]
- [virt] macvtap: Convert to using rtnl lock (Jason Wang) [895484]
- [virt] macvtap: fix uninitialized return value macvtap_ioctl_set_queue() (Jason Wang) [731550]
- [virt] macvtap: slient sparse warnings (Jason Wang) [731550]
- [virt] macvtap: enable multiqueue flag (Jason Wang) [731550]
- [virt] macvtap: add TUNSETQUEUE ioctl (Jason Wang) [731550]
- [virt] macvtap: eliminate linear search (Jason Wang) [731550]
- [virt] macvtap: introduce macvtap_get_vlan() (Jason Wang) [731550]
- [virt] macvtap: do not add self to waitqueue if doing a nonblock read (Jason Wang) [731550]
- [virt] macvtap: fix a possible race between queue selection and changing queues (Jason Wang) [731550]

* Thu Aug 08 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-7.el7]
- [vfio] type1: Fix leak on error path (Alex Williamson) [984081]
- [vfio] Limit group opens (Alex Williamson) [984081]
- [vfio] type1: Fix missed frees and zero sized removes (Alex Williamson) [984081]
- [vfio] Provide module option to disable vfio_iommu_type1 hugepage support (Alex Williamson) [984081]
- [vfio] hugepage support for vfio_iommu_type1 (Alex Williamson) [984081]
- [vfio] Convert type1 iommu to use rbtree (Alex Williamson) [984081]
- [iommu] Use pa and zx instead of casting (Alex Williamson) [984081]
- [iommu] amd: Only unmap large pages from the first pte (Alex Williamson) [984081]
- [iommu] Fix compiler warning on pr_debug (Alex Williamson) [984081]
- [iommu] amd: Fix memory leak in free_pagetable (Alex Williamson) [984081]
- [iommu] Split iommu_unmaps (Alex Williamson) [984081]
- [iommu] intel, amd: Remove multifunction assumption around grouping (Alex Williamson) [984081]
- [x86] spinlock: make ticket lock increment 2, unconditionally (Rik van Riel) [970737]
- [virt] pvticketlock: When paravirtualizing ticket locks, increment by 2 (Rik van Riel) [970737]
- [scsi] isci: Fix a race condition in the SSP task management path (David Milburn) [990201]
- [netdrv] bnx2x: Wait for MCP validity during AER (Michal Schmidt) [797460]
- [virt] virtio_scsi: Fix virtqueue affinity setup (Asias He) [971826]
- [fs] nfs: fix open(O_RDONLY|O_TRUNC) in NFS4.0 (Jeff Layton) [987615]
- [watchdog] hpwdt: Add check for UEFI bits (Linda Knippers) [985195]
- [powerpc] mm/numa: VPHN topology change updates all siblings (Steve Best) [973594]
- [powerpc] powernv: Fix iommu initialization again (Steve Best) [979523]
- [firmware] efivars: If pstore_register fails, free unneeded pstore buffer (Lenny Szubowicz) [983597]
- [acpi] Eliminate console msg if pstore.backend excludes ERST (Lenny Szubowicz) [983597]
- [fs] pstore: Return unique error if backend registration excluded by kernel param (Lenny Szubowicz) [983597]

* Tue Aug 06 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-6.el7]
- [fs] locks: move file_lock_list to a set of percpu hlist_heads and convert file_lock_lock to an lglock (Jeff Layton) [976876]
- [fs] seq_file: add seq_list_*_percpu helpers (Jeff Layton) [976876]
- [fs] locks: give the blocked_hash its own spinlock (Jeff Layton) [976876]
- [fs] locks: add a new "lm_owner_key" lock operation (Jeff Layton) [976876]
- [fs] locks: turn the blocked_list into a hashtable (Jeff Layton) [976876]
- [fs] locks: convert fl_link to a hlist_node (Jeff Layton) [976876]
- [fs] locks: avoid taking global lock if possible when waking up blocked waiters (Jeff Layton) [976876]
- [fs] locks: protect most of the file_lock handling with i_lock (Jeff Layton) [976876]
- [fs] locks: encapsulate the fl_link list handling (Jeff Layton) [976876]
- [fs] locks: make "added" in __posix_lock_file a bool (Jeff Layton) [976876]
- [fs] locks: comment cleanups and clarifications (Jeff Layton) [976876]
- [fs] locks: make generic_add_lease and generic_delete_lease static (Jeff Layton) [976876]
- [fs] cifs: use posix_unblock_lock instead of locks_delete_block (Jeff Layton) [976876]
- [fs] locks: drop the unused filp argument to posix_unblock_lock (Jeff Layton) [976876]
- [scsi] ipr: IOA Status Code(IOASC) update (Steve Best) [731129]
- [scsi] ipr: qc_fill_rtf() method should not store alternate status register (Steve Best) [731129]
- [scsi] ipr: possible irq lock inversion dependency detected (Steve Best) [731129]
- [fs] nfsd: when dentry_open returns an error do not propagate as struct file (Steve Dickson) [987090]
- [net] sunrpc: underflow issue in decode_write_list() (Steve Dickson) [987090]
- [fs] nfsd: fix minorversion support interface (Steve Dickson) [987090]
- [fs] lockd: protect nlm_blocked access in nlmsvc_retry_blocked (Steve Dickson) [987090]
- [fs] nfsd: support minorversion 1 by default (Steve Dickson) [987090]
- [fs] nfsd: allow destroy_session over destroyed session (Steve Dickson) [987090]
- [net] sunrpc: fix failures to handle -1 uid's (Steve Dickson) [987090]
- [net] sunrpc: Don't schedule an upcall on a replaced cache entry (Steve Dickson) [987090]
- [net] sunrpc: xpt_auth_cache should be ignored when expired (Steve Dickson) [987090]
- [net] sunrpc/cache: ensure items removed from cache do not have pending upcalls (Steve Dickson) [987090]
- [net] sunrpc/cache: use cache_fresh_unlocked consistently and correctly (Steve Dickson) [987090]
- [net] sunrpc/cache: remove races with queuing an upcall (Steve Dickson) [987090]
- [fs] nfsd: return delegation immediately if lease fails (Steve Dickson) [987090]
- [fs] nfsd: do not throw away 4.1 lock state on last unlock (Steve Dickson) [987090]
- [fs] nfsd: delegation-based open reclaims should bypass permissions (Steve Dickson) [987090]
- [net] sunrpc: don't error out on small tcp fragment (Steve Dickson) [987090]
- [net] sunrpc: fix handling of too-short rpc's (Steve Dickson) [987090]
- [fs] nfsd: minor read_buf cleanup (Steve Dickson) [987090]
- [fs] nfsd: fix decoding of compounds across page boundaries (Steve Dickson) [987090]
- [fs] nfsd: clean up nfs4_open_delegation (Steve Dickson) [987090]
- [fs] nfsd: Don't give out read delegations on creates (Steve Dickson) [987090]
- [fs] nfsd: allow client to send no cb_sec flavors (Steve Dickson) [987090]
- [fs] nfsd: fail attempts to request gss on the backchannel (Steve Dickson) [987090]
- [fs] nfsd: implement minimal SP4_MACH_CRED (Steve Dickson) [987090]
- [net] sunrpc: store gss mech in svc_cred (Steve Dickson) [987090]
- [net] sunrpc: introduce init_svc_cred (Steve Dickson) [987090]
- [fs] nfsd: avoid undefined signed overflow (Steve Dickson) [987090]
- [net] sunrpc: the cache_detail in cache_is_valid is unused any more (Steve Dickson) [987090]
- [net] sunrpc: server back channel needs no rpcbind method (Steve Dickson) [987090]
- [fs] nfsd: fix compile in !CONFIG_NFSD_V4_SECURITY_LABEL case (Steve Dickson) [987090]
- [fs] nfsd: Server implementation of MAC Labeling (Steve Dickson) [987090]
- [fs] nfsd: Add NFS v4.2 support to the NFS server (Steve Dickson) [987090]
- [security] fix cap_inode_getsecctx returning garbage (Steve Dickson) [987090]
- [fs] nfsd: store correct client minorversion for >=4.2 (Steve Dickson) [987090]
- [fs] nfsd: get rid of the unused functions in vfs (Steve Dickson) [987090]
- [fs] nfs: Fix brainfart in attribute length calculation (Steve Dickson) [987090]
- [fs] nfs: Fix a regression against the FreeBSD server (Steve Dickson) [987090]
- [net] sunrpc/rpc_pipe: rpc_dir_inode_operations can be static (Steve Dickson) [987090]
- [fs] nfs: Allow nfs_updatepage to extend a write under additional circumstances (Steve Dickson) [987090]
- [fs] nfs: Make nfs_readdir revalidate less often (Steve Dickson) [987090]
- [fs] nfs: Make nfs_attribute_cache_expired() non-static (Steve Dickson) [987090]
- [net] sunrpc/rpc_pipe: set dentry operations at d_alloc time (Steve Dickson) [987090]
- [fs] nfs: set verifier on existing dentries in nfs_prime_dcache (Steve Dickson) [987090]
- [fs] nfs: Set NFS_CS_MIGRATION for NFSv4 mounts (Steve Dickson) [987090]
- [fs] nfs: Refactor nfs4_init_session and nfs4_init_channel_attrs (Steve Dickson) [987090]
- [fs] nfs: use pnfs_device maxcount for the objectlayout gdia_maxcount (Steve Dickson) [987090]
- [fs] nfs: use pnfs_device maxcount for the blocklayout gdia_maxcount (Steve Dickson) [987090]
- [fs] nfs: Fix gdia_maxcount calculation to fit in ca_maxresponsesize (Steve Dickson) [987090]
- [fs] nfs: Improve legacy idmapping fallback (Steve Dickson) [987090]
- [fs] nfs: end back channel session draining (Steve Dickson) [987090]
- [fs] nfs: Apply v4.1 capabilities to v4.2 (Steve Dickson) [987090]
- [fs] nfs: Clean up layout segment comparison helper names (Steve Dickson) [987090]
- [fs] nfs: layout segment comparison helpers should take 'const' parameters (Steve Dickson) [987090]
- [fs] nfs: Move the DNS resolver into the NFSv4 module (Steve Dickson) [987090]
- [net] sunrpc/rpc_pipefs: only set rpc_dentry_ops if d_op isn't already set (Steve Dickson) [987090]
- [fs] nfs: SETCLIENTID add the format string for the NETID (Steve Dickson) [987090]
- [fs] nfs: Add in v4.2 callback operation (Steve Dickson) [987090]
- [fs] nfs: Make callbacks minor version generic (Steve Dickson) [987090]
- [fs] nfs: Add Kconfig entry for Labeled NFS V4 client (Steve Dickson) [987090]
- [fs] nfs: Extend NFS xattr handlers to accept the security namespace (Steve Dickson) [987090]
- [fs] nfs: Client implementation of Labeled-NFS (Steve Dickson) [987090]
- [fs] nfs: Add label lifecycle management (Steve Dickson) [987090]
- [fs] nfs: Add labels to client function prototypes (Steve Dickson) [987090]
- [fs] nfs: Extend fattr bitmaps to support all 3 words (Steve Dickson) [987090]
- [fs] nfs: Introduce new label structure (Steve Dickson) [987090]
- [fs] nfs: Add label recommended attribute and NFSv4 flags (Steve Dickson) [987090]
- [fs] nfs: Added NFS v4.2 support to the NFS client (Steve Dickson) [987090]
- [security] selinux: Add new labeling type native labels (Steve Dickson) [987090]
- [security] lsm: Add flags field to security_sb_set_mnt_opts for in kernel mount data (Steve Dickson) [987090]
- [security] Add Hook to test if the particular xattr is part of a MAC model (Steve Dickson) [987090]
- [security] Add hook to calculate context based on a negative dentry (Steve Dickson) [987090]
- [fs] nfs: Close another NFSv4 recovery race (Steve Dickson) [987090]
- [fs] nfs: Move dentry instantiation into the NFSv4-specific atomic open code (Steve Dickson) [987090]
- [fs] nfs: Refactor _nfs4_open_and_get_state to set ctx->state (Steve Dickson) [987090]
- [fs] nfs: pass the nfs_open_context to nfs4_do_open (Steve Dickson) [987090]
- [fs] nfs: Remove redundant check for FMODE_EXEC in nfs_finish_open (Steve Dickson) [987090]
- [net] sunrpc: Remove redundant call to rpc_set_running() in __rpc_execute() (Steve Dickson) [987090]
- [net] sunrpc: Remove unused functions rpc_task_set/has_priority (Steve Dickson) [987090]
- [net] sunrpc: Remove the unused helpers task_for_each() and task_for_first() (Steve Dickson) [987090]
- [net] sunrpc: Remove unused function rpc_queue_empty (Steve Dickson) [987090]
- [net] sunrpc: Fix a potential race in rpc_execute (Steve Dickson) [987090]
- [fs] nfs: Simplify setting the layout header credential (Steve Dickson) [987090]
- [fs] nfs: Enable state protection (Steve Dickson) [987090]
- [fs] nfs: Use layout credentials for get_deviceinfo calls (Steve Dickson) [987090]
- [fs] nfs: Ensure that test_stateid and free_stateid use correct credentials (Steve Dickson) [987090]
- [fs] nfs: Ensure that reclaim_complete uses the right credential (Steve Dickson) [987090]
- [fs] nfs: Ensure that layoutreturn uses the correct credential (Steve Dickson) [987090]
- [fs] nfs: Ensure that layoutget is called using the layout credential (Steve Dickson) [987090]
- [fs] nfs: Add NFSv4.2 protocol constants (Steve Dickson) [987090]

* Fri Aug 02 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-5.el7]
- [fs] cifs: fix bad error handling in crypto code (Jeff Layton) [988398]
- [fs] cifs: Fix a deadlock when a file is reopened (Sachin Prabhu) [988398]
- [fs] cifs: Reopen the file if reconnect durable handle failed (Sachin Prabhu) [988398]
- [fs] cifs: Fix minor endian error in durable handle patch series (Sachin Prabhu) [988398]
- [fs] cifs: Reconnect durable handles for SMB2 (Sachin Prabhu) [988398]
- [fs] cifs: Make SMB2_open use cifs_open_parms struct (Sachin Prabhu) [988398]
- [fs] cifs: Introduce cifs_open_parms struct (Sachin Prabhu) [988398]
- [fs] cifs: Request durable open for SMB2 opens (Sachin Prabhu) [988398]
- [fs] cifs: Simplify SMB2 create context handling (Sachin Prabhu) [988398]
- [fs] cifs: Simplify SMB2_open code path (Sachin Prabhu) [988398]
- [fs] cifs: Respect create_options in smb2_open_file (Sachin Prabhu) [988398]
- [fs] cifs: Fix lease context buffer parsing (Sachin Prabhu) [988398]
- [fs] cifs: use sensible file nlink values if unprovided (Sachin Prabhu) [988398]
- [fs] cifs: Limit allocation of crypto mechanisms to dialect which requires (Sachin Prabhu) [988398]
- [fs] cifs: Don't pass inode to ->d_hash() and ->d_compare() (Sachin Prabhu) [988398]
- [fs] cifs: fill TRANS2_QUERY_FILE_INFO ByteCount fields (Sachin Prabhu) [988398]
- [fs] cifs: fix SMB2 signing enablement in cifs_enable_signing (Sachin Prabhu) [988398]
- [fs] cifs: Fix build warning (Sachin Prabhu) [988398]
- [fs] cifs: SMB3 Signing enablement (Sachin Prabhu) [988398]
- [fs] cifs: Do not set DFS flag on SMB2 open (Sachin Prabhu) [988398]
- [fs] cifs: fix static checker warning (Sachin Prabhu) [988398]
- [fs] cifs: try to handle the MUST SecurityFlags sanely (Sachin Prabhu) [988398]
- [fs] cifs: When server doesn't provide SecurityBuffer on SMB2Negotiate pick default (Sachin Prabhu) [988398]
- [fs] cifs: Handle big endianness in NTLM (ntlmv2) authentication (Sachin Prabhu) [988398]
- [fs] cifs: revalidate directories instiantiated via FIND_* in order to handle DFS referrals (Sachin Prabhu) [988398]
- [fs] cifs: SMB2 FSCTL and IOCTL worker function (Sachin Prabhu) [988398]
- [fs] cifs: Charge at least one credit, if server says that it supports multicredit (Sachin Prabhu) [988398]
- [fs] cifs: Remove typo (Sachin Prabhu) [988398]
- [fs] cifs: Some missing share flags (Sachin Prabhu) [988398]
- [fs] cifs: using strlcpy instead of strncpy (Sachin Prabhu) [988398]
- [fs] cifs: Update headers to update various SMB3 ioctl definitions (Sachin Prabhu) [988398]
- [fs] cifs: Update cifs version number (Sachin Prabhu) [988398]
- [fs] cifs: Add ability to dipslay SMB3 share flags and capabilities for debugging (Sachin Prabhu) [988398]
- [fs] cifs: Add some missing SMB3 and SMB3.02 flags (Sachin Prabhu) [988398]
- [fs] cifs: Add SMB3.02 dialect support (Sachin Prabhu) [988398]
- [fs] cifs: Fix endian error in SMB2 protocol negotiation (Sachin Prabhu) [988398]
- [fs] cifs: clean up the SecurityFlags write handler (Sachin Prabhu) [988398]
- [fs] cifs: update the default global_secflags to include "raw" NTLMv2 (Sachin Prabhu) [988398]
- [fs] move sectype to the cifs_ses instead of TCP_Server_Info (Sachin Prabhu) [988398]
- [fs] cifs: track the enablement of signing in the TCP_Server_Info (Sachin Prabhu) [988398]
- [fs] add new fields to smb_vol to track the requested security flavor (Sachin Prabhu) [988398]
- [fs] cifs: add new fields to cifs_ses to track requested security flavor (Sachin Prabhu) [988398]
- [fs] cifs: track the flavor of the NEGOTIATE reponse (Sachin Prabhu) [988398]
- [fs] cifs: add new "Unspecified" securityEnum value (Sachin Prabhu) [988398]
- [fs] cifs: factor out check for extended security bit into separate function (Sachin Prabhu) [988398]
- [fs] cifs: move handling of signed connections into separate function (Sachin Prabhu) [988398]
- [fs] cifs: break out lanman NEGOTIATE handling into separate function (Sachin Prabhu) [988398]
- [fs] cifs: break out decoding of security blob into separate function (Sachin Prabhu) [988398]
- [fs] cifs: remove the cifs_ses->flags field (Sachin Prabhu) [988398]
- [fs] cifs: throw a warning if negotiate or sess_setup ops are passed NULL server or session pointers (Sachin Prabhu) [988398]
- [fs] cifs: make decode_ascii_ssetup void return (Sachin Prabhu) [988398]
- [fs] cifs: remove useless memset in LANMAN auth code (Sachin Prabhu) [988398]
- [fs] cifs: remove protocolEnum definition (Sachin Prabhu) [988398]
- [fs] cifs: add a "nosharesock" mount option to force new sockets to server to be created (Sachin Prabhu) [988398]
- [fs] fuse: readdirplus cleanup (Niels de Vos) [988312]
- [fs] fuse: readdirplus change attributes once (Niels de Vos) [988312]
- [fs] fuse: readdirplus fix instantiate (Niels de Vos) [988312]
- [fs] fuse: readdirplus sanity checks (Niels de Vos) [988312]
- [fs] fuse: fix readdirplus dentry leak (Niels de Vos) [988312]
- [powerpc] hw_brk: Fix off by one error when validating DAWR region end (Steve Best) [843485]
- [powerpc] hw_brk: Fix clearing of extraneous IRQ (Steve Best) [843485]
- [powerpc] hw_brk: Fix setting of length for exact mode breakpoints (Steve Best) [843485]
- [powerpc] perf: Add power8 EBB support (Steve Best) [969176]
- [powerpc] perf: Core EBB support for 64-bit book3s (Steve Best) [969176]
- [powerpc] perf: Don't enable if we have zero events (Steve Best) [969176]
- [powerpc] powerpc/perf: Use existing out label in power_pmu_enable() (Steve Best) [969176]
- [powerpc] perf: Freeze PMC5/6 if we're not using them (Steve Best) [969176]
- [powerpc] powerpc/perf: Rework disable logic in pmu_disable() (Steve Best) [969176]
- [powerpc] perf: Check that events only include valid bits on Power8 (Steve Best) [969176]
- [ipc] sem: rename try_atomic_semop() to perform_atomic_semop(), docu update (Rik van Riel) [881820]
- [ipc] sem: replace shared sem_otime with per-semaphore value (Rik van Riel) [881820]
- [ipc] sem: always use only one queue for alter operations (Rik van Riel) [881820]
- [ipc] sem: separate wait-for-zero and alter tasks into seperate queues (Rik van Riel) [881820]
- [ipc] sem: cacheline align the semaphore structures (Rik van Riel) [881820]
- [fs] gfs2: Add atomic_open support (Steven Whitehouse) [983098]
- [fs] gfs2: Only do one directory search on create (Steven Whitehouse) [983098]
- [fs] pstore: Add hsize argument in write_buf call of pstore_ftrace_call (Steve Best) [947161]
- [powerpc] pseries: Support compression of oops text via pstore (Steve Best) [947161]
- [powerpc] pseries: Re-organise the oops compression code (Steve Best) [947161]
- [powerpc] pstore: Pass header size in the pstore write callback (Steve Best) [947161]
- [powerpc] pseries: Read common partition via pstore (Steve Best) [947161]
- [powerpc] pseries: Read of-config partition via pstore (Steve Best) [947161]
- [powerpc] pseries: Distinguish between a os-partition and non-os partition (Steve Best) [947161]
- [powerpc] pseries: Read rtas partition via pstore (Steve Best) [947161]
- [powerpc] pseries: Read/Write oops nvram partition via pstore (Steve Best) [947161]
- [powerpc] pseries: Introduce generic read function to read nvram-partitions (Steve Best) [947161]
- [powerpc] pseries: Add version and timestamp to oops header (Steve Best) [947161]
- [powerpc] pseries: Remove syslog prefix in uncompressed oops text (Steve Best) [947161]

* Wed Jul 31 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-4.el7]
- [x86] signals: Merge EFLAGS bit clearing into a single statement (Jiri Olsa) [986216]
- [x86] signals: Clear RF EFLAGS bit for signal handler (Jiri Olsa) [986216]
- [x86] signals: Propagate RF EFLAGS bit through the signal restore call (Jiri Olsa) [986216]
- [kernel] perf: Fix perf_lock_task_context() vs RCU (Jiri Olsa) [986216]
- [kernel] perf: Remove WARN_ON_ONCE() check in __perf_event_enable() for valid scenario (Jiri Olsa) [986216]
- [kernel] perf: Clone child context from parent context pmu (Jiri Olsa) [986216]
- [kernel] perf: Fix interrupt handler timing harness (Jiri Olsa) [986216]
- [kernel] perf: Drop sample rate when sampling is too slow (Jiri Olsa) [986216]
- [kernel] hw_breakpoint: Introduce "struct bp_cpuinfo" (Jiri Olsa) [986216]
- [kernel] hw_breakpoint: Simplify *register_wide_hw_breakpoint() (Jiri Olsa) [986216]
- [kernel] hw_breakpoint: Introduce cpumask_of_bp() (Jiri Olsa) [986216]
- [kernel] hw_breakpoint: Simplify the "weight" usage in toggle_bp_slot() paths (Jiri Olsa) [986216]
- [kernel] hw_breakpoint: Simplify list/idx mess in toggle_bp_slot() paths (Jiri Olsa) [986216]
- [kernel] perf: Add simple Haswell PMU support (Jiri Olsa) [986216]
- [kernel] perf: Add const qualifier to perf_pmu_register's 'name' arg (Jiri Olsa) [986216]
- [kernel] perf: Fix hypervisor branch sampling permission check (Jiri Olsa) [986216]
- [kernel] perf: Check branch sampling priv level in generic code (Jiri Olsa) [986216]
- [kernel] perf: Add sysfs entry to adjust multiplexing interval per PMU (Jiri Olsa) [986216]
- [kernel] perf: Use hrtimers for event multiplexing (Jiri Olsa) [986216]
- [kernel] perf: Fix hw breakpoints overflow period sampling (Jiri Olsa) [986216]
- [tools] perf/tests: Check proper prev_state size for sched_switch tp (Jiri Olsa) [984998]
- [tools] perf/tests: Omit end of the symbol check failure for test 1 (Jiri Olsa) [984998]
- [tools] perf/script: Fix broken include in Context.xs (Jiri Olsa) [984998]
- [tools] perf: Fix -ldw/-lelf link test when static linking (Jiri Olsa) [984998]
- [tools] perf: Fix perf version generation (Jiri Olsa) [984998]
- [tools] perf/stat: Fix per-socket output bug for uncore events (Jiri Olsa) [984998]
- [tools] perf/symbols: Fix vdso list searching (Jiri Olsa) [984998]
- [tools] perf/evsel: Fix missing increment in sample parsing (Jiri Olsa) [984998]
- [tools] perf: Update symbol_conf.nr_events when processing attribute events (Jiri Olsa) [984998]
- [tools] perf: Fix new_term() missing free on error path (Jiri Olsa) [984998]
- [tools] perf: Fix parse_events_terms() segfault on error path (Jiri Olsa) [984998]
- [tools] perf/evsel: Fix count parameter to read call in event_format__new (Jiri Olsa) [984998]
- [tools] perf: Fix -x/--exclude-other option for report command (Jiri Olsa) [984998]
- [tools] perf/evlist: Enhance perf_evlist__start_workload() (Jiri Olsa) [984998]
- [tools] perf/record: Remove -f/--force option (Jiri Olsa) [984998]
- [tools] perf/record: Remove -A/--append option (Jiri Olsa) [984998]
- [tools] perf/stat: Avoid sending SIGTERM to random processes (Jiri Olsa) [984998]
- [tools] perf: Include termios.h explicitly (Jiri Olsa) [984998]
- [tools] perf/bench: Fix memory allocation fail check in mem{set, cpy} workloads (Jiri Olsa) [984998]
- [tools] perf: Fix build errors with O and DESTDIR make vars set (Jiri Olsa) [984998]
- [tools] perf: Fix output directory of Documentation/ (Jiri Olsa) [984998]
- [tools] perf: Get only verbose output with V=1 (Jiri Olsa) [984998]
- [tools] perf: Add missing liblk.a dependency for python/perf.so (Jiri Olsa) [984998]
- [tools] perf: Remove '?=' Makefile STRIP assignment (Jiri Olsa) [984998]
- [tools] perf: Replace multiple line assignment with multiple statements (Jiri Olsa) [984998]
- [tools] perf: Replace tabs with spaces for all non-commands statements (Jiri Olsa) [984998]
- [tools] perf: Add NO_BIONIC variable to confiure bionic setup (Jiri Olsa) [984998]
- [tools] perf: Switch to full path C include directories (Jiri Olsa) [984998]
- [tools] perf: Merge all *LDFLAGS* make variable into LDFLAGS (Jiri Olsa) [984998]
- [tools] perf: Merge all *CFLAGS* make variable into CFLAGS (Jiri Olsa) [984998]
- [tools] perf/evlist: Reset SIGTERM handler in workload child process (Jiri Olsa) [984998]
- [tools] perf: Remove cwdlen from struct perf_session (Jiri Olsa) [984998]
- [tools] perf: Remove frozen from perf_header struct (Jiri Olsa) [984998]
- [tools] perf/tests: Fix exclude_guest|exclude_host checking for attr tests (Jiri Olsa) [984998]
- [tools] perf/tests: Fix attr test for record -d option (Jiri Olsa) [984998]
- [tools] perf: Final touches for CHK config move (Jiri Olsa) [984998]
- [tools] perf: Move paths config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move libnuma check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move stdlib check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move libbfd check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move libpython check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move libperl check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move gtk2 check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move slang check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move libaudit check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move libunwind check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move libdw check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move libelf check config into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move compiler and linker flags check into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move programs check into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Move arch check into config/Makefile (Jiri Olsa) [984998]
- [tools] perf: Add automated make test suite (Jiri Olsa) [984998]
- [tools] perf: Save parent pid in thread struct (Jiri Olsa) [984998]
- [tools] perf/stats: Fix divide by 0 in variance (Jiri Olsa) [984998]
- [tools] perf/kvm: Handle realloc failures (Jiri Olsa) [984998]
- [tools] perf/evsel: Fix printing of perf_event_paranoid message (Jiri Olsa) [984998]
- [tools] perf/test: Fix typo (Jiri Olsa) [984998]
- [tools] perf/hists: Rename hist_entry__add_pair arguments (Jiri Olsa) [984998]
- [tools] perf/diff: Use internal rb tree for hists__precompute (Jiri Olsa) [984998]
- [tools] perf/report: Add report.percent-limit config variable (Jiri Olsa) [984998]
- [tools] perf/top: Add --percent-limit option (Jiri Olsa) [984998]
- [tools] perf/report: Add --percent-limit option (Jiri Olsa) [984998]
- [tools] perf/report: Don't bother locking when adding hist entries (Jiri Olsa) [984998]
- [tools] perf/hists: Move locking to its call-sites (Jiri Olsa) [984998]
- [tools] perf/top: Get rid of *_threaded() functions (Jiri Olsa) [984998]
- [tools] perf/top: Fix percent output when no samples collected (Jiri Olsa) [984998]
- [tools] perf/top: Fix -E option behavior (Jiri Olsa) [984998]
- [tools] perf/record: handle death by SIGTERM (Jiri Olsa) [984998]
- [tools] perf: Handle JITed code in shared memory (Jiri Olsa) [984998]
- [tools] perf/tests: Fix compile errors in bp_signal files (Jiri Olsa) [984998]
- [tools] perf: Fix tab vs spaces issue in Makefile ifdef/endif (Jiri Olsa) [984998]
- [tools] perf/hists browser: Use sort__has_sym (Jiri Olsa) [984998]
- [tools] perf/top: Use sort__has_sym (Jiri Olsa) [984998]
- [tools] perf/sort: Cleanup sort__has_sym setting (Jiri Olsa) [984998]
- [tools] perf/sort: Reorder HISTC_SRCLINE index (Jiri Olsa) [984998]
- [tools] perf/archive: Fix typo on Documentation (Jiri Olsa) [984998]
- [tools] perf/sort: Consolidate sort_entry__setup_elide() (Jiri Olsa) [984998]
- [tools] perf/sort: Separate out memory-specific sort keys (Jiri Olsa) [984998]
- [tools] perf/sort: Factor out common code in sort_dimension__add() (Jiri Olsa) [984998]
- [tools] perf/sort: Introduce sort__mode variable (Jiri Olsa) [984998]
- [tools] perf/report: Fix alignment of symbol column when -v is given (Jiri Olsa) [984998]
- [tools] perf/hists: Free unused mem info of a matched hist entry (Jiri Olsa) [984998]
- [tools] perf/hists: Fix an invalid memory free on he->branch_info (Jiri Olsa) [984998]
- [tools] perf: Fix bug in isupper() and islower() (Jiri Olsa) [984998]
- [mm] thp: define HPAGE_PMD_* constants as BUILD_BUG() if !THP (Steve Best) [947166]
- [powerpc] mm: Fix build warnings with CONFIG_TRANSPARENT_HUGEPAGE disabled (Steve Best) [947166]
- [powerpc] mm: Optimize hugepage invalidate (Steve Best) [947166]
- [powerpc] thp: Enable THP on PPC64 (Steve Best) [947166]
- [powerpc] mm: split hugepage when using subpage protection (Steve Best) [947166]
- [powerpc] mm: disable assert_pte_locked for collapse_huge_page (Steve Best) [947166]
- [powerpc] mm: Prevent gcc to re-read the pagetables (Steve Best) [947166]
- [powerpc] mm: Make linux pagetable walk safe with THP enabled (Steve Best) [947166]
- [powerpc] thp: Add code to handle HPTE faults for hugepages (Steve Best) [947166]
- [powerpc] mm: Update gup_pmd_range to handle transparent hugepages (Steve Best) [947166]
- [powerpc] kvm: Handle transparent hugepage in KVM (Steve Best) [947166]
- [powerpc] mm: Replace find_linux_pte with find_linux_pte_or_hugepte (Steve Best) [947166]
- [powerpc] mm: Update find_linux_pte_or_hugepte to handle transparent hugepages (Steve Best) [947166]
- [powerpc] mm: move find_linux_pte_or_hugepte and gup_hugepte to common code (Steve Best) [947166]
- [powerpc] thp: Implement transparent hugepages for ppc64 (Steve Best) [947166]
- [powerpc] thp: Double the PMD table size for THP (Steve Best) [947166]
- [powerpc] mm: handle hugepage size correctly when invalidating hpte entries (Steve Best) [947166]
- [mm] thp: deposit the transpare huge pgtable before set_pmd (Steve Best) [947166]
- [mm] thp: don't use HPAGE_SHIFT in transparent hugepage code (Steve Best) [947166]
- [mm] thp: withdraw the pgtable after pmdp related operations (Steve Best) [947166]
- [mm] thp: add pmd args to pgtable deposit and withdraw APIs (Steve Best) [947166]
- [mm] thp: use the correct function when updating access flags (Steve Best) [947166]

* Fri Jul 26 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-3.el7]
- [powerpc] mm/numa: Do not update sysfs cpu registration from invalid context (Steve Best) [967447]
- [misc] MAINTAINERS: Add ACPI folks for ACPI-related things under drivers/pci (Myron Stowe) [984759]
- [pci] Add CircuitCo vendor ID and subsystem ID (Myron Stowe) [984759]
- [pci] Use pdev->pm_cap instead of pci_find_capability(.., PCI_CAP_ID_PM) (Myron Stowe) [984759]
- [pci] Return early on allocation failures to unindent mainline code (Myron Stowe) [984759]
- [pci] Simplify IOV implementation and fix reference count races (Myron Stowe) [984759]
- [pci] Drop redundant setting of bus->is_added in virtfn_add_bus() (Myron Stowe) [984759]
- [pci] pci-acpi: Use correct power state strings in messages (Myron Stowe) [984759]
- [pci] Fix comment typo for pcie_pme_remove() (Myron Stowe) [984759]
- [pci] Rename pci_release_bus_bridge_dev() to pci_release_host_bridge_dev() (Myron Stowe) [984759]
- [pci] Fix refcount issue in pci_create_root_bus() error recovery path (Myron Stowe) [984759]
- [pci] Convert alloc_pci_dev(void) to pci_alloc_dev(bus) (Myron Stowe) [984759]
- [pci] Hide remove and rescan sysfs interfaces for SR-IOV virtual functions (Myron Stowe) [984759]
- [pci] Add pcibios_release_device() (Myron Stowe) [984759]
- [iommu] irq_remapping: Conserve interrupt resources when using multiple-MSIs (Myron Stowe) [984759]
- [i2c] i2c-piix4: Add AMD CZ SMBus device ID (Myron Stowe) [984759]
- [ata] ahci: Add AMD CZ SATA device ID (Myron Stowe) [984759]
- [pci] Put Hudson-2 device IDs together (Myron Stowe) [984759]
- [pci] Replace strict_strtoul() with kstrtoul() (Myron Stowe) [984759]
- [pci] Finish SR-IOV VF setup before adding the device (Myron Stowe) [984759]
- [pci] Fix comment typo for PCI_EXP_LNKCAP_CLKPM (Myron Stowe) [984759]
- [acpi] pci_root: Use dev_printk(), acpi_handle_print(), pr_xxx() when possible (Myron Stowe) [984759]
- [acpi] pci_root: Remove unused global list acpi_pci_roots (Myron Stowe) [984759]
- [acpi] pci_root: Introduce "handle" local for economy of expression (Myron Stowe) [984759]
- [acpi] pci_root: Combine duplicate adjacent "if" tests (Myron Stowe) [984759]
- [pci] Allocate only as many MSI vectors as requested by driver (Myron Stowe) [984759]
- [pci] Replace printks with appropriate pr_*() (Myron Stowe) [984759]
- [pci] Fix kerneldoc for pci_disable_link_state() (Myron Stowe) [984759]
- [x86] pci: Increase info->res_num before checking pci_use_crs (Myron Stowe) [984759]
- [pci] Fix INTC comment typo for pci_swizzle_interrupt_pin() (Myron Stowe) [984759]
- [pci] Convert ioapic.c to module_pci_driver (Myron Stowe) [984759]
- [pci] Introduce pci_alloc_dev(struct pci_bus*) to replace alloc_pci_dev() (Myron Stowe) [984759]
- [pci] Introduce pci_bus_{get|put}() to manage PCI bus reference count (Myron Stowe) [984759]
- [pci] Unset resource if initial BAR value is invalid (Myron Stowe) [984759]
- [pci] Consolidate calls to pcibios_bus_to_resource() in __pci_read_base() (Myron Stowe) [984759]
- [pci] Add 0x prefix to BAR register position in __pci_read_base() (Myron Stowe) [984759]
- [pci] aspm: Warn when driver asks to disable ASPM, but we can't do it (Myron Stowe) [984759]
- [powerpc] pci: Use PCI_UNKNOWN for unknown power state (Myron Stowe) [984759]
- [acpi] pci_root: Check acpi_resource_to_address64() return value (Myron Stowe) [984759]
- [pci] Work around Ivytown NTB BAR size issue (Myron Stowe) [984759]
- [net] sunrpc: Fix another issue with rpc_client_register() (Jeff Layton) [924649]
- [net] sunrpc: Fix a deadlock in rpc_client_register() (Jeff Layton) [924649]
- [net] sunrpc: PipeFS MOUNT notification optimization for dying clients (Jeff Layton) [924649]
- [net] sunrpc: split client creation routine into setup and registration (Jeff Layton) [924649]
- [net] sunrpc: fix races on PipeFS UMOUNT notifications (Jeff Layton) [924649]
- [net] sunrpc: fix races on PipeFS MOUNT notifications (Jeff Layton) [924649]

* Fri Jul 19 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-2.el7]
- [scsi] sd: fix crash when UA received on DIF enabled device (Ewan Milne) [979440]
- [md] dm-cache: add call to mark_tech_preview (Mike Snitzer) [982752]
- [fs] nfs: have NFSv3 try server-specified auth flavors in turn (Jeff Layton) [977649]
- [fs] nfs: have nfs_mount fake up a auth_flavs list when the server didn't provide it (Jeff Layton) [977649]
- [fs] nfs: move server_authlist into nfs_try_mount_request (Jeff Layton) [977649]
- [fs] nfs: refactor "need_mount" code out of nfs_try_mount (Jeff Layton) [977649]
- [pci] ear: Reset link for devices below Root Port or Downstream Port (Myron Stowe) [797485]
- [acpi] apei: Force fatal AER severity when component has been reset (Myron Stowe) [797485]
- [pci] aer: Remove "extern" from function declarations (Myron Stowe) [797485]
- [pci] aer: Move AER severity defines to aer.h (Myron Stowe) [797485]
- [pci] aer: Set dev->__aer_firmware_first only for matching devices (Myron Stowe) [797485]
- [pci] aer: Factor out HEST device type matching (Myron Stowe) [797485]
- [pci] aer: Don't parse HEST table for non-PCIe devices (Myron Stowe) [797485]

* Tue Jul 09 2013 Jarod Wilson <jarod@redhat.com> [3.10.0-1.el7]
- [x86] fix !CONFIG_HYPERVISOR_GUEST compile (Andrew Jones)
- [s390x] crash: Fuzzy live dump for Linux on System z (Hendrik Brueckner) [805120]
- [xen] xenfv: fix hangs when kdumping (Andrew Jones) [845471]
- [libata] export ata_port port_no attribute via /sys (David Milburn) [951181]
- [s390x] kdump: Use 4 GiB for KEXEC_AUTO_THRESHOLD (Hendrik Brueckner) [953044]
- [x86] hpet: allow user controlled mmap for user processes (Prarit Bhargava) [788727]
- [mm] add memory tracking hooks (James Paradis) [725860]
- [kernel] clocksource, fix !CONFIG_CLOCKSOURCE_WATCHDOG compile (Prarit Bhargava) [914709]
- [x86] disable clocksource watchdog (Prarit Bhargava) [914709]
- [kdump] x86, fix kdump and unsupported HW check (Prarit Bhargava) [923256]
- [x86] support single cpu on guests only (Prarit Bhargava) [873806]
- [kernel] Mark power5, power6, !Intel, and !AMD systems as unsupported (Prarit Bhargava) [870129]
- [kernel] Backport RH specific TAINT flags (Prarit Bhargava) [870129]
- [s390x] zfcpdump: Add user space tool (Hendrik Brueckner) [825189]
- [kdump] crashkernel=auto fixes and cleanup (Dave Young) [804077]
- [fedora] /dev/crash driver (Kyle McMartin) [808839]
- [kdump] forward port crashkernel auto reservation code (Dave Young) [804077]
- [block] Change scheduler to CFQ for ATA/SATA (Vivek Goyal) [811016]
- [kernel] kbuild: AFTER_LINK (Roland McGrath)
- [ppc64] disable INFINIBAND_EHCA temporarily, it ftbfs (Kyle McMartin)
- [kernel] Add RHEL_{MAJOR,MINOR,RELEASE} to top level Makefile (Kyle McMartin)

* Mon Jun 03 2013 Kyle McMartin <kyle@redhat.com>
- Trimmed changelog for rhel7.git, see rhpkg git for earlier history.

###
# The following Emacs magic makes C-c C-e use UTC dates.
# Local Variables:
# rpm-change-log-uses-utc: t
# End:
###
